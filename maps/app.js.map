{"version":3,"sources":["util/socialSharing.js","translations/en.js","translations/de.js","service-user.js","service-parse.js","service-localdb.js","app.js","route.js","patch.js","controller-signin.js","controller-swipe.js","controller-profile.js","controller-chat.js","constants.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["// From https://github.com/driftyco/ng-cordova/blob/master/src/plugins/socialSharing.js\n\n// install   :      cordova plugin add https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin.git\n// link      :      https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin\n\n// NOTE: shareViaEmail -> if user cancels sharing email, success is still called\n// TODO: add support for iPad\n\nangular.module('ngCordova.plugins.socialSharing', [])\n\n\t.factory('$cordovaSocialSharing', ['$q', '$window', function ($q, $window) {\n\n\t\treturn {\n\t\t\tshare: function (message, subject, file, link) {\n\t\t\t\tif(!$window.plugins || !$window.plugins.socialsharing)\n\t\t\t\t\treturn $q.reject('socialsharing plugin not found')\n\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tsubject = subject || null;\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.share(message, subject, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaTwitter: function (message, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaTwitter(message, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaWhatsApp: function (message, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaWhatsApp(message, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaFacebook: function (message, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tmessage = message || null;\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaFacebook(message, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaFacebookWithPasteMessageHint: function (message, file, link, pasteMessageHint) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaFacebookWithPasteMessageHint(message, file, link, pasteMessageHint, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaSMS: function (message, commaSeparatedPhoneNumbers) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\t$window.plugins.socialsharing.shareViaSMS(message, commaSeparatedPhoneNumbers, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareViaEmail: function (message, subject, toArr, ccArr, bccArr, fileArr) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\ttoArr = toArr || null;\n\t\t\t\tccArr = ccArr || null;\n\t\t\t\tbccArr = bccArr || null;\n\t\t\t\tfileArr = fileArr || null;\n\t\t\t\t$window.plugins.socialsharing.shareViaEmail(message, subject, toArr, ccArr, bccArr, fileArr, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tshareVia: function (via, message, subject, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\tmessage = message || null;\n\t\t\t\tsubject = subject || null;\n\t\t\t\tfile = file || null;\n\t\t\t\tlink = link || null;\n\t\t\t\t$window.plugins.socialsharing.shareVia(via, message, subject, file, link, function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tcanShareViaEmail: function () {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\t$window.plugins.socialsharing.canShareViaEmail(function () {\n\t\t\t\t\tq.resolve(true);\n\t\t\t\t}, function () {\n\t\t\t\t\tq.reject(false);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tcanShareVia: function (via, message, subject, file, link) {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\t$window.plugins.socialsharing.canShareVia(via, message, subject, file, link, function (success) {\n\t\t\t\t\tq.resolve(success);\n\t\t\t\t}, function (error) {\n\t\t\t\t\tq.reject(error);\n\t\t\t\t});\n\t\t\t\treturn q.promise;\n\t\t\t},\n\n\t\t\tavailable: function () {\n\t\t\t\tvar q = $q.defer();\n\t\t\t\twindow.plugins.socialsharing.available(function (isAvailable) {\n\t\t\t\t\tif (isAvailable) {\n\t\t\t\t\t\tq.resolve();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tq.reject();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}]);","var TRANSLATION_EN = {\r\n\r\n    'OK': 'Ok',\r\n    'SAVE': 'Save',\r\n    'SEND': 'Send',\r\n    'CANCEL': 'Cancel',\r\n    'LOADING': 'Loading',\r\n    'REMOVE': 'Remove',\r\n    'REPORT': 'Report',\r\n    'LOGOUT': 'Logout',\r\n\r\n    'PASSWORD_RESET_SENT': 'Password reset link emailed',\r\n    'PASSWORD_LENGTH' : 'Password must be at least 6 characters',\r\n    'INVALID_EMAIL': 'Enter a valid email',\r\n    'LOGGING_IN_TO_FB': 'Logging into Facebook',\r\n    'LOGGING_IN_TO_LINKEDIN': 'Logging into LinkedIn',\r\n    'LOADING_PROFILE': 'Loading profile',\r\n    'LOADING_FB_PROFILE': 'Loading Facebook profile',\r\n    'CREATING_ACCOUNT': 'Creating account',\r\n    'WAITING_FOR_GPS': 'Waiting for GPS location',\r\n    'LOGIN_ERROR': 'Error logging in. Try again later',\r\n    'VERIFY_EMAIL_MESSAGE': 'Check your inbox for an email to verify your address, then come back and click the button below',\r\n    'CHECK_EMAIL_VERIFICATION': 'Check Email Verification',\r\n    'EMAIL_NOT_VERIFIED': 'Email is not verified',\r\n    'FIRST_NAME_REQUIRED': 'First name is required',\r\n    'SURNAME_REQUIRED': 'Surname is required',\r\n    'BIRTH_DAY_REQUIRED': 'Birth day is required',\r\n    'BIRTH_MONTH_REQUIRED': 'Birth month is required',\r\n    'BIRTH_YEAR_REQUIRED': 'Birth year is required',\r\n    'GENDER_REQUIRED': 'Gender is required',\r\n    'TERMS_OF_USE': 'Terms of Use',\r\n\r\n    'MENU_PROFILE': 'Profile',\r\n    'MENU_MATCHES': 'Find Matches',\r\n    'MENU_CHAT': 'Chat',\r\n    'MENU_DISCOVERY': 'Discovery Preferences',\r\n    'MENU_SETTINGS': 'App Settings',\r\n    'MENU_CONTACT': 'Contact Us',\r\n    'MENU_SHARE': 'Share',\r\n\r\n    'PROFILE_SETUP_MSG': 'We need a couple more details',\r\n    'BIRTH_DAY': 'Birth day',\r\n    'BIRTH_MONTH': 'Birth month',\r\n    'BIRTH_YEAR': 'Birth year',\r\n    'FIRST_NAME': 'First name',\r\n    'GENDER': 'Gender',\r\n    'MALE': 'Male',\r\n    'FEMALE': 'Female',\r\n\r\n    'PROFILE_TITLE': 'My Profile',\r\n    'ABOUT': 'About',\r\n    'FRIENDS_USING': 'My Friends',\r\n    'MY_INTERESTS': 'My Interests',\r\n\r\n    'EDIT_PROFILE_TITLE': 'Edit Profile',\r\n    'ABOUT_YOU' : 'About You',\r\n\r\n    'AWAY' : 'away', // for \"5km away\"\r\n\r\n    'ALBUMS': 'Albums',\r\n    'NO_FB_ALBUMS': 'You don\\'t have any Facebook albums',\r\n    'ADD_A_PHOTO': 'Add a photo',\r\n    'CROP_YOUR_PHOTO': 'Crop your photo',\r\n\r\n    'DISCOVERY_TITLE': 'Discovery Preferences',\r\n    'DISCOVERABLE': 'Discoverable',\r\n    'SHOW_ME': 'Show me',\r\n    'GUYS': 'Guys',\r\n    'GIRLS': 'Girls',\r\n    'SEARCH_DISTANCE': 'Search distance',\r\n    'AGED_BETWEEN': 'Aged between',\r\n\r\n    'SETTINGS_TITLE': 'App Settings',\r\n    'NOTIFICATION_SOUND': 'Notification Sound',\r\n    'NEW_MATCH': 'New match',\r\n    'NEW_MESSAGE': 'New message',\r\n    'SHOW_DISTANCES_IN': 'Show distances in',\r\n\r\n    'NOT_DISCOVERABLE': 'You\\'re not discoverable',\r\n    'ENABLE_DISCOVERY_TO_MEET': 'Enable discovery to meet new people nearby',\r\n    'ENABLE_DISCOVERY': 'Enable Discovery',\r\n    'FINDING_PEOPLE': 'Finding people near you',\r\n    'NO_ONE_NEW': 'There\\'s no one new around you',\r\n    'SEARCH_AGAIN': 'Search Again',\r\n    'LIKE': 'Like',\r\n    'NOT_LIKE': 'Nope',\r\n\r\n    'LOCATION': 'Location',\r\n    'SET_LOCATION': 'Set Location',\r\n    'USE_GPS_LOCATION': 'Use GPS location',\r\n    'GPS_ERROR': 'Unable to get GPS location',\r\n    'SET_MAP_LOCATION': 'Please set your location on the map and press save',\r\n\r\n    'NO_MATCHES': 'You don\\'t have any matches yet.',\r\n    'START_SWIPING': 'Start swiping',\r\n    'MATCHES_LOAD_ERROR' : 'Unable to load matches',\r\n\r\n    'ITS_A_MATCH': 'It\\'s A Match',\r\n    'LIKED_EACH_OTHER': 'You and {{name}} have liked each other',\r\n    'SEND_MESSAGE': 'Send Message',\r\n    'KEEP_PLAYING': 'Keep Playing',\r\n\r\n    'REMOVE_MATCH': 'Remove match',\r\n    'MATCH_OPTIONS': 'Match options',\r\n    'REMOVE_MATCH_ERROR': 'Error removing match. Try again later',\r\n    'UNMATCHED': 'You were unmatched',\r\n    'MATCH_REPORTED': 'Match reported',\r\n    'WANT_TO_REMOVE_MATCH': 'Do you want to remove this match?',\r\n\r\n    'TYPE_YOUR_MESSAGE': 'Type your message',\r\n    'MESSAGE_NOT_SENT': 'Message not sent. Try again',\r\n\r\n    'SETTINGS_SAVE_ERROR': 'Error saving settings. Try again later',\r\n    'REQUEST_FAILED': 'Request failed',\r\n\r\n    'DELETE': 'Delete',\r\n    'DELETE_ACCOUNT': 'Delete your account',\r\n\r\n    '': ''\r\n}\r\n","var TRANSLATION_DE = {\r\n    'LOGGING_IN_TO_FB': 'Anmelden bei Facebook',\r\n    'LOADING_PROFILE': 'Laden profil',\r\n}\r\n","\r\n// Callback for push notifications, which passes it into the Angular code\r\nfunction onNotification(pnObj){\r\n\tconsole.log(\"Received push notification: \" + JSON.stringify(pnObj))\r\n\tvar appService = angular.element(document.body).injector().get('AppService')\r\n\r\n\tappService.pushNotificationReceived()\r\n\r\n\tif(pnObj.type == 'message')\r\n\t\tappService.newMessageNotification(pnObj.message)\r\n\telse if(pnObj.type == 'match')\r\n\t\tappService.newMatchNotification(pnObj.matchId)\r\n\telse if(pnObj.type == 'removeMatch')\r\n\t\tappService.removeMatchNotification(pnObj.matchId)\r\n\r\n}\r\n\r\nfunction onNotificationOpen(pnObj){\r\n\tconsole.log(\"Opened push notification: \" + JSON.stringify(pnObj))\r\n\tvar appService = angular.element(document.body).injector().get('AppService')\r\n\tvar state = angular.element(document.body).injector().get('$state')\r\n\r\n\tif(pnObj.type == 'message') {\r\n\t\tconsole.log('going to menu.chat ' + pnObj.message.match.id)\r\n\t\tstate.go('menu.chat', {matchId: pnObj.message.match.id})\r\n\t}\r\n\telse if(pnObj.type == 'match') {\r\n\t\tconsole.log('going to menu.match-profile ' + pnObj.matchId)\r\n\t\tstate.go('menu.match-profile', {matchId: pnObj.matchId})\r\n\t}\r\n}\r\n\r\n\r\n(function() {\r\n\r\n\tangular.module('service.app', ['ngCordova', 'service.parse', 'service.localdb'])\r\n    .factory('AppService', function($rootScope, $timeout, $http, $cordovaFacebook, $cordovaGeolocation, $cordovaMedia,\r\n\t\t\t\t\t\t\t\t\t$log, $state, $q, $ionicHistory, ParseService, LocalDB, $localStorage, $interval,\r\n\t\t\t\t\t\t\t\t\t$analytics) {\r\n\r\n\t\tvar server = ParseService\r\n\r\n\t\t// keep a reference to the mutual matches so we can update when a push notification arrives for a new match\r\n\t\tvar matches = []\r\n\r\n\t\t// Contains the match/chat ids which have unread chat messages as properties\r\n\t\tvar unreadChats = {}\r\n\t\t// The total number of matches/chats that have unread messages. This must be updated when unreadChats is updated\r\n\t\tvar unreadChatsCount = 0\r\n\r\n\t\tvar profileCache = []\r\n\r\n\t\t// keep a reference to the current chat messages so we can update when a push notification arrives\r\n\t\tvar activeChatMatchId = null\r\n\t\tvar activeChatMessages = null\r\n\r\n\t\t// Variables for the polling when push notifications haven't been detected\r\n\t\tconst CHAT_SYNC_INTERVAL = 60000\r\n\t\tconst MATCH_SYNC_RATIO = 10 // After how many chat syncs we should also sync the matches\r\n\t\tvar syncCount = 0\r\n\t\tvar synchronizeInterval = null\r\n\r\n\t\tvar service = {\r\n\t\t\t// fields\r\n\t\t\tisLoggedIn : false,\r\n\t\t\tuserId : '',\r\n\t\t\tfbId : '',\r\n\t\t\tprofile : null,\r\n\t\t\tpotentialMatches : null,\r\n\t\t\t// methods\r\n\t\t\tinit : init,\r\n\t\t\tfacebookLogin: facebookLogin,\r\n\t\t\tlinkedInLogin: linkedInLogin,\r\n\t\t\tsignUp : signUp,\r\n\t\t\tlogIn : logIn,\r\n            autoLogin : autoLogin,\r\n\t\t\treloadUser : reloadUser,\r\n            isEmailVerified : isEmailVerified,\r\n\t\t\ttermsOfUseAgreed: termsOfUseAgreed,\r\n            requestPasswordReset : requestPasswordReset,\r\n\t\t\tgoToNextLoginState : goToNextLoginState,\r\n\t\t\tloadProfile : loadProfile,\r\n\t\t\tgetProfile : getProfile,\r\n\t\t\tgetProfileById : getProfileById,\r\n\t\t\tgetProfileByMatchId : getProfileByMatchId,\r\n\t\t\tsaveBirthdate : saveBirthdate,\r\n\t\t\tsaveProfile : saveProfile,\r\n\t\t\tsaveSettings : saveSettings,\r\n\t\t\tenableDiscovery : enableDiscovery,\r\n\t\t\tgetCurrentPosition : getCurrentPosition,\r\n\t\t\tcopyFacebookProfile : copyFacebookProfile,\r\n\t\t\tsetPhoto : setPhoto,\r\n\t\t\tgetPotentialMatches: getPotentialMatches,\r\n\t\t\tupdatePotentialMatches: updatePotentialMatches,\r\n\t\t\tclearPotentialMatches: clearPotentialMatches,\r\n\t\t\tnewMatchNotification : newMatchNotification,\r\n\t\t\tremoveMatchNotification : removeMatchNotification,\r\n            deleteUnmatched : deleteUnmatched,\r\n\t\t\tprocessMatch : processMatch,\r\n\t\t\tgetMutualMatches : getMutualMatches,\r\n\t\t\tgetMatch : getMatch,\r\n\t\t\tgetActiveChat : getActiveChat,\r\n\t\t\tsetChatRead: setChatRead,\r\n\t\t\tgetUnreadChatsCount: getUnreadChatsCount,\r\n\t\t\tsendChatMessage : sendChatMessage,\r\n\t\t\tremoveMatch : removeMatch,\r\n\t\t\treportProfile : reportProfile,\r\n\t\t\tnewMessageNotification : newMessageNotification,\r\n\t\t\tpushNotificationReceived : pushNotificationReceived,\r\n\t\t\tresetBadge: resetBadge,\r\n\t\t\tsendContactMessage: sendContactMessage,\r\n\t\t\tlogout : logout,\r\n\t\t\tdeleteAccount: deleteAccount\r\n\t\t}\r\n\r\n\t\treturn service\r\n\r\n\r\n\t\tfunction init() {\r\n\t\t\tLocalDB.init()\r\n\t\t\t\t.then(() => LocalDB.getMatches())\r\n\t\t\t\t.then(dbMatches => {\r\n\t\t\t\t\tfor(let match of dbMatches) {\r\n\t\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\t\tprofileCache[match.profile.id] = match.profile\r\n\t\t\t\t\t}\r\n\t\t\t\t}, error => $log.error('Error loading db matches ' + JSON.stringify(error)))\r\n\r\n\t\t\tserver.init()\r\n\t\t}\r\n\r\n\t\tfunction facebookLogin(facebookResponse) {\r\n\t\t\t$analytics.eventTrack('facebookLogin')\r\n\t\t\treturn server.facebookLogin(facebookResponse).then(function(result){\r\n\t\t\t\tservice.userId = server.getUserId()\r\n\t\t\t\treturn result;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfunction linkedInLogin(authData) {\r\n\t\t\t$analytics.eventTrack('linkedInLogin')\r\n\t\t\treturn server.linkedInLogin(authData).then(user => {\r\n\t\t\t\tservice.userId = user.id\r\n\t\t\t\treturn $q.when(user)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfunction signUp(email, password) {\r\n\t\t\t$analytics.eventTrack('signupEmail')\r\n\t\t\treturn server.signUp(email, password).then(function(result){\r\n\t\t\t\tservice.userId = server.getUserId()\r\n\t\t\t\treturn result;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfunction logIn(email, password) {\r\n\t\t\t$analytics.eventTrack('loginEmail')\r\n\t\t\treturn server.logIn(email, password).then(function(result){\r\n\t\t\t\tservice.userId = server.getUserId()\r\n\t\t\t\treturn result;\r\n\t\t\t})\r\n\t\t}\r\n\r\n        function autoLogin() {\r\n            server.autoLogin()\r\n        }\r\n\r\n\r\n\t\tfunction reloadUser() {\r\n\t\t\treturn server.reloadUser()\r\n\t\t}\r\n\r\n        function isEmailVerified() {\r\n            return server.reloadUser().then(function(user) {\r\n\t\t\t\treturn user.emailVerified === true\r\n\t\t\t})\r\n        }\r\n\r\n\r\n\t\t/**\r\n\t\t * Set that the user has agreed to the terms of use\r\n\t\t * @returns {IPromise<void>}\r\n\t\t */\r\n\t\tfunction termsOfUseAgreed() {\r\n\t\t\t$localStorage.termsOfUseAgreed = true\r\n\t\t\treturn $q.when()\r\n\t\t}\r\n\r\n        function requestPasswordReset(email) {\r\n            $analytics.eventTrack('passwordReset')\r\n            return server.requestPasswordReset(email)\r\n        }\r\n\r\n\t\t/**\r\n\t\t * Loads the profile for the current user. Returns a promise as it will need call the serve the first time.\r\n\t\t * @returns {Promise<IProfile>}\r\n\t\t */\r\n\t\tfunction loadProfile() {\r\n\t\t\tif (service.profile)\r\n\t\t\t\treturn $q.when(service.profile)\r\n\r\n\t\t\treturn server.getProfile()\r\n\t\t\t\t.then(function(result) {\r\n\t\t\t\t\tif(!result)\r\n\t\t\t\t\t\treturn null\r\n\r\n\t\t\t\t\tif(_.isUndefined(result.gps)) result.gps = true // migration for the new field. Can be deleted sometime\r\n\t\t\t\t\t$log.log('AppService server.getProfile returned ' + result)\r\n\t\t\t\t\tservice.profile = result\r\n\t\t\t\t\treturn service.profile\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get the profile for the current user. loadProfile() must be called before this is called.\r\n\t\t * @returns {IProfile}\r\n\t\t */\r\n\t\tfunction getProfile() {\r\n\t\t\treturn service.profile\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Get the profile for a mutual match\r\n\t\t * @param matchId the mutual match id\r\n\t\t * @returns {Promise<IProfile>}\r\n\t\t */\r\n\t\tfunction getProfileByMatchId(matchId) {\r\n\t\t\t$log.debug('getProfileByMatchId ' + matchId)\r\n\r\n\t\t\tlet match = matches[matchId]\r\n\t\t\tif(match) {\r\n\t\t\t\tlet profile = profileCache[match.profileId]\r\n\t\t\t\tif(profile)\r\n\t\t\t\t\treturn $q.when(profile)\r\n\t\t\t}\r\n\r\n\t\t\treturn server.getProfileForMatch(matchId).then(profile => {\r\n\t\t\t\tprofileCache[profile.id] = profile\r\n\t\t\t\treturn profile\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tfunction getProfileById(profileId) {\r\n\t\t\treturn profileCache[profileId]\r\n\t\t}\r\n\r\n\r\n\t\tfunction goToNextLoginState() {\r\n\r\n\t\t\tvar user = Parse.User.current()\r\n\t\t\t// If users have authenticated with Facebook then don't require email verification\r\n\t\t\t// Note: there are three states to emailVerified in Parse. undefined means it is not required, eg user signed up before email verification was enabled\r\n\t\t\tif(!$rootScope.facebookConnected && user.emailVerified === false) {\r\n\t\t\t\tgo('emailVerification')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif(!isProfileValid()) {\r\n\t\t\t\tgo('profileSetup')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif(!getProfile().location) {\r\n\t\t\t\tgo('locationSetup')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif(!$localStorage.termsOfUseAgreed) {\r\n\t\t\t\tgo('termsOfUse')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// TODO welcome/intro slides\r\n\r\n\t\t\tstartSynchronisation()\r\n\r\n\t\t\tgo('menu.home')\r\n\t\t}\r\n\r\n\t\tfunction go(state) {\r\n\t\t\t$ionicHistory.nextViewOptions({\r\n\t\t\t\thistoryRoot: true,\r\n\t\t\t\tdisableBack: true\r\n\t\t\t})\r\n\t\t\t$state.go(state)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Syncs to the server and starts the polling synchronization if required\r\n\t\t */\r\n\t\tfunction startSynchronisation() {\r\n\r\n\t\t\tvar syncFunction = () => {\r\n\t\t\t\tif(++syncCount === MATCH_SYNC_RATIO) {\r\n\t\t\t\t\tsyncCount = 0\r\n\t\t\t\t\tsynchronizeMutualMatches().always(synchronizeChatMessages)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsynchronizeChatMessages()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Sync on startup\r\n\t\t\tsynchronizeMutualMatches().always(synchronizeChatMessages)\r\n\r\n\t\t\t// Check if we need to start polling for updates\r\n\t\t\t// If we have received a push notification, then we'll rely on them to\r\n\t\t\t// update while the app is running\r\n\t\t\tif(!synchronizeInterval && !$localStorage.pushNotificationReceived) {\r\n\t\t\t\t$log.log('Starting polling synchronization')\r\n\t\t\t\t// Start an interval timer to sync periodically\r\n\t\t\t\tsynchronizeInterval = $interval(syncFunction, CHAT_SYNC_INTERVAL)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @returns {boolean} if the profile contains the all minimum data required to use the main application\r\n\t\t */\r\n\t\tfunction isProfileValid() {\r\n\t\t\treturn service.profile.birthdate && service.profile.name && service.profile.gender\r\n\t\t}\r\n\r\n\r\n\t\tfunction getCurrentPosition() {\r\n\t\t\t// see http://stackoverflow.com/questions/3397585/navigator-geolocation-getcurrentposition-sometimes-works-sometimes-doesnt\r\n\t\t\t$log.log('getCurrentPosition()')\r\n\r\n\t\t\tvar timeout = 10000\r\n\t\t\tvar q = $q.defer()\r\n\r\n\t\t\tvar geolocFail = function() {\r\n\t\t\t\t$log.log('$cordovaGeolocation.getCurrentPosition did not return within the timeout')\r\n\t\t\t\tq.reject('GEO_ERROR')\r\n\t\t\t}\r\n\t\t\tvar timer = $timeout(geolocFail, timeout + 1000); // wait an extra second longer than the expected geo timeout\r\n\r\n\t\t\t$cordovaGeolocation.getCurrentPosition().then(function(location){\r\n\t\t\t\t$timeout.cancel(timer);\r\n\t\t\t\t$log.log('location ' + JSON.stringify(location))\r\n\t\t\t\tvar geoPoint = server.convertLocation(location.coords.latitude, location.coords.longitude)\r\n\t\t\t\tq.resolve(geoPoint)\r\n\t\t\t}, function(error){\r\n\t\t\t\t$timeout.cancel(timer);\r\n\t\t\t\t$log.log('getCurrentPosition error: ' + JSON.stringify(error))\r\n\r\n\t\t\t\t//if(error.code == 1){\r\n\t\t\t\t//\talert('You have denied app access to location');\r\n\t\t\t\t//} else {\r\n\t\t\t\t//\talert('code: '    + error.code    + '\\n' +\r\n\t\t\t\t//\t'message: ' + error.message + '\\n');\r\n\t\t\t\t//}\r\n\r\n\t\t\t\tq.reject('GEO_ERROR')\r\n\t\t\t}, { maximumAge: 3600000, timeout: timeout, enableHighAccuracy: true })\r\n\r\n\t\t\treturn q.promise\r\n\r\n\t\t\t// simple way without wrapping in a timer\r\n\t\t\t//return $cordovaGeolocation.getCurrentPosition().then(function(location){\r\n\t\t\t//\t$log.log(JSON.stringify(location))\r\n\t\t\t//\treturn server.convertLocation(location.coords.latitude, location.coords.longitude)\r\n\t\t\t//}, function(error){\r\n\t\t\t//\t$log.log('position error: ' + JSON.stringify(error))\r\n\t\t\t//\treturn $q.reject(error)\r\n\t\t\t//}, { maximumAge: 1000000, timeout: 2000, enableHighAccuracy: true })\r\n\t\t}\r\n\r\n\t\tfunction saveSettings(profile) {\r\n\t\t\tvar mods = {notifyMatch: profile.notifyMatch, notifyMessage:profile.notifyMessage, distanceType:profile.distanceType}\r\n\t\t\treturn server.saveSettings(service.profile, mods)\r\n\t\t\t\t.then(function(result) {\r\n\t\t\t\t\t$log.log('saveSettings result:' + JSON.stringify(result))\r\n\t\t\t\t\treturn service.profile\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Update the user profile with their Facebook profile data\r\n\t\t * @returns {ng.IPromise<IProfile>} the user profile\r\n\t\t */\r\n\t\tfunction copyFacebookProfile() {\r\n\t\t\treturn server.copyFacebookProfile().then(profile => {\r\n\t\t\t\tservice.profile = profile\r\n\t\t\t\treturn service.profile\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfunction enableDiscovery() {\r\n\t\t    return saveProfile({enabled : true})\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @param profileChanges the changes to save, or null if a new profile\r\n\t\t * @returns {IPromise<TResult>}\r\n\t\t */\r\n\t\tfunction saveProfile(profileChanges) {\r\n\t\t\t$log.log('saving profile')\r\n\r\n\t\t\treturn server.saveProfile(service.profile, profileChanges)\r\n\t\t\t\t.then(function(result) {\r\n\t\t\t\t\treturn service.profile\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\t$analytics.eventTrack('logout')\r\n\t\t\tservice.userId = null\r\n\t\t\tservice.fbId = null\r\n\t\t\tservice.profile = null\r\n\t\t\tmatches = []\r\n\t\t\tprofileCache = []\r\n\t\t\tactiveChatMatchId = null\r\n\t\t\tactiveChatMessages = null\r\n\t\t\tunreadChats = {}\r\n\t\t\tunreadChatsCount = 0\r\n\t\t\tif(synchronizeInterval) {\r\n\t\t\t\t$interval.cancel(synchronizeInterval)\r\n\t\t\t\tsynchronizeInterval = null\r\n\t\t\t}\r\n\t\t\t// TODO wait for all the server/fb logout calls to complete before going to sign-in\r\n\t\t\tserver.logout()\r\n\t\t\tlocalStorage.clear()\r\n\t\t\t$localStorage.$reset()\r\n\t\t\tLocalDB.deleteDb()\r\n\t\t\t// TODO do we need to clear the image cache?\r\n\t\t\tif($rootScope.facebookConnected) {\r\n\t\t\t    $log.log('logging out of Facebook')\r\n\t\t\t    $cordovaFacebook.logout().then(function (result) {\r\n\t\t\t        $log.log('logged out of facebook')\r\n\t\t\t        delete $rootScope.facebookConnected\r\n\t\t\t        delete $rootScope.fbAccessToken\r\n\t\t\t    }, function (error) {\r\n\t\t\t        // possible message from FB JS: FB.logout() called without an access token.\r\n\t\t\t        $log.log('error logging out of Facebook ' + JSON.stringify(error))\r\n\t\t\t    })\r\n\t\t\t}\r\n\r\n\t\t\t$ionicHistory.clearCache()\r\n\t\t\t$ionicHistory.nextViewOptions({\r\n\t\t\t\tdisableBack: true\r\n\t\t\t})\r\n\t\t\t$state.go('signin')\r\n\t\t}\r\n\r\n\t\tfunction deleteAccount() {\r\n\t\t\t$analytics.eventTrack('deleteAccount')\r\n\t\t\treturn server.deleteAccount()\r\n\t\t}\r\n\r\n\t\tfunction deleteUnmatched() {\r\n\t\t\treturn server.deleteUnmatched()\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Process a like/pass on a profile\r\n\t\t * @param profile\r\n\t\t * @param {boolean} liked\r\n\t\t * @returns {Promise.<T>}\r\n\t\t */\r\n\t\tfunction processMatch(profile, liked) {\r\n\t\t\t$analytics.eventTrack('swipe', {liked:liked ? 'true' : 'false'})\r\n\t\t\treturn server.processProfile(profile, liked).then(function(match) {\r\n\t\t\t\t$log.log('processed match action')\r\n\t\t\t\t// If it's a mutual match then store the match with the profile\r\n\t\t\t\tif(match != null && match.state == 'M') {\r\n\t\t\t\t\tgetProfileByMatchId(match.id).then(function(profile){\r\n\t\t\t\t\t\tmatch.profile = profile\r\n\t\t\t\t\t\t//\tprofileCache[profile.id] = profile\r\n\t\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\t\tLocalDB.saveMatch(match, profile)\r\n\t\t\t\t\t\t$rootScope.$broadcast('newMatch', match)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}, function(error) {\r\n\t\t\t\t$log.error('error processing match ' + JSON.stringify(error))\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Push notification handler for a new mutual match\r\n\t\t * @param matchId\r\n\t\t */\r\n\t\tfunction newMatchNotification(matchId) {\r\n\t\t\t// We could have a Parse API call or two less by loading the match directly, but this ensure we're up to date\r\n\t\t\t// in case a push notification was dropped or not received.\r\n\t\t\tsynchronizeMutualMatches().then(newMatches => {\r\n\t\t\t\tif(newMatches.length && service.profile.notifyMatch) {\r\n\t\t\t\t\tvar media = new Media(filePath('audio/match-notification.mp3'), null, null, null);\r\n\t\t\t\t\t$cordovaMedia.play(media);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Call when the this user removes a matched user\r\n\t\t * @param matchId\r\n\t\t */\r\n\t\tfunction removeMatch(matchId) {\r\n\t\t\t$analytics.eventTrack('removeMatch')\r\n\t\t\t$log.log('removeMatch ' + matchId)\r\n\t\t\treturn server.removeMatch(matchId).then(function(result) {\r\n\t\t\t\t// remove the match from our local db and memory copy\r\n\t\t\t\tLocalDB.deleteMatch(matchId)\r\n\t\t\t\t_.remove(matches, {id: matchId})\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Called when the other user removes this user (either via push notification or server sync)\r\n\t\t * @param matchId\r\n\t\t */\r\n\t\tfunction removeMatchNotification(matchId) {\r\n\t\t\t$log.log('removeMatchNotification ' + matchId)\r\n\t\t\tif(matches)\r\n\t\t\t\t_.remove(matches, {id: matchId})\r\n\t\t\tif(activeChatMatchId == matchId) {\r\n\t\t\t\tactiveChatMatchId = null\r\n\t\t\t\tactiveChatMessages = null\r\n\t\t\t\t$log.log('cleared active chat from remove notification')\r\n\t\t\t}\r\n\t\t\tLocalDB.deleteMatch(matchId)\r\n\t\t\t$rootScope.$broadcast('matchRemoved', matchId)\r\n\t\t}\r\n\r\n\r\n\t\tfunction getPotentialMatches() {\r\n\t\t\treturn service.potentialMatches\r\n\t\t}\r\n\r\n\t\tfunction updatePotentialMatches() {\r\n\t\t\t$analytics.eventTrack('searchProfiles')\r\n\t\t\treturn server.searchProfiles(service.profile).then(function(profiles) {\r\n\t\t\t\tservice.potentialMatches = profiles\r\n\t\t\t\t$rootScope.$broadcast('newPotentialMatches')\r\n\t\t\t\treturn service.potentialMatches\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Clear the existing search results, e.g. when changing the search settings\r\n\t\t */\r\n\t\tfunction clearPotentialMatches() {\r\n\t\t\tservice.potentialMatches = null\r\n\t\t}\r\n\r\n\r\n\t\tfunction getMutualMatches() {\r\n\t\t\t$log.log('getMutualMatches()')\r\n\t\t\tif(matches != null) {\r\n\t\t\t\treturn matches\r\n\t\t\t}\r\n\r\n\t\t\tmatches = []\r\n\r\n\t\t\treturn LocalDB.getMatches().then(function(dbMatches) {\r\n\t\t\t\tfor(let match of dbMatches) {\r\n\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\tprofileCache[match.profile.id] = match.profile\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// load any new matches from the server asynchronously\r\n\t\t\t\tsynchronizeMutualMatches()\r\n\t\t\t\treturn matches\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Load the mutual matches from the server and update our local copy\r\n\t\t * @returns {Promise<IMatch[]> any new mutual matches\r\n\t\t */\r\n\t\tfunction synchronizeMutualMatches() {\r\n\t\t\t$log.debug('synchronizeMutualMatches()')\r\n\t\t\treturn server.reloadUser().then(user => {\r\n\r\n\t\t\t\tvar localMatchIds = _.pluck(matches, 'id')\r\n\t\t\t\tvar serverMatchIds = user.matches\r\n\t\t\t\tvar toRemove = _.difference(localMatchIds, serverMatchIds)\r\n\t\t\t\tvar toAdd = _.difference(serverMatchIds, localMatchIds)\r\n\t\t\t\t$log.debug('Found ' + toRemove.length + ' mutual matches to remove')\r\n\t\t\t\t$log.debug('Found ' + toAdd.length + ' mutual matches to add')\r\n\r\n\t\t\t\t// Ok to remove these async in the background. It should complete by the following server call anyway.\r\n\t\t\t\tfor(let removeId of toRemove)\r\n\t\t\t\t\tremoveMatchNotification(removeId)\r\n\r\n\t\t\t\treturn server.getMatches(toAdd)\r\n\r\n\t\t\t}).then(newMatches => {\r\n\t\t\t\t$log.debug('loaded ' + newMatches.length + ' matches to sync')\r\n\t\t\t\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n\t\t\t\tfor(let match of newMatches) {\r\n\t\t\t\t\t$log.debug('syncing new match ' + match.id)\r\n\t\t\t\t\t// TODO extract into some nice Date util methods\r\n\t\t\t\t\tlet createdAt = new Date(match.createdAt)\r\n\t\t\t\t\tlet formattedDate = createdAt.getDate() + ' ' + months[createdAt.getMonth()]\r\n\t\t\t\t\tmatch.lastMessage = 'Matched on ' + formattedDate\r\n\t\t\t\t\tmatches.unshift(match)\r\n\t\t\t\t\tlet profile = match.profile\r\n\t\t\t\t\tLocalDB.saveMatch(match, profile)\r\n\t\t\t\t\tprofileCache[profile.id] = profile\r\n\t\t\t\t}\r\n\t\t\t\tif(newMatches.length) {\r\n\t\t\t\t\t// TODO unread\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn newMatches\r\n\t\t\t})\r\n\t\t\t// log any errors an rethrow?\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Loads the chat messages from the server since the date stored in $localStorage.lastChatSync, or from the\r\n\t\t * beginning if there is no local storage value yet\r\n\t\t * @returns {Promise.<ChatMessage[]>}\r\n\t\t */\r\n\t\tfunction synchronizeChatMessages() {\r\n\r\n\t\t\tif(matches.length === 0)\r\n\t\t\t\treturn $q.when([])\r\n\r\n\t\t\tvar matchesById = _.indexBy(matches, 'id');\r\n\t\t\tvar lastChatSync = $localStorage.lastChatSync\r\n\t\t\t$log.info('synchronizing chat messages' + (lastChatSync ? ' from ' + lastChatSync : ''))\r\n\r\n\t\t\treturn server.loadChatMessages(lastChatSync)\r\n\t\t\t\t.then(function(messages) {\r\n\t\t\t\t\t$log.info('Found ' + messages.length + ' chat messages to synchronize')\r\n\t\t\t\t\tfor(let message of messages) {\r\n\t\t\t\t\t\tlet match = matchesById[message.match.id]\r\n\t\t\t\t\t\t// Note: match may be null if its been removed by either user, or if it is a chat message\r\n\t\t\t\t\t\t// from a new match which we haven't synced yet.\r\n\t\t\t\t\t\tLocalDB.saveChatMessage(message).then(function(isNew) {\r\n\t\t\t\t\t\t\tif(isNew && match) {\r\n\t\t\t\t\t\t\t\tmatch.read = false\r\n\t\t\t\t\t\t\t\tmatch.lastMessage = message.text\r\n\t\t\t\t\t\t\t\tupdateUnreadChatsCount(match.id, false)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Store where we have synced up to (i.e. the maximum createdAt in the messages array)\r\n\t\t\t\t\tif(messages.length)\r\n\t\t\t\t\t\t$localStorage.lastChatSync = _.max(_.pluck(messages, \"createdAt\"))\r\n\r\n\t\t\t\t\t// TODO need to sort by match last updated\r\n\r\n\t\t\t\t\tif(activeChatMatchId) {\r\n\t\t\t\t\t\tvar activeMsgsById = _.indexBy(activeChatMessages, 'id')\r\n\r\n\t\t\t\t\t\tfor(let msg of messages) {\r\n\t\t\t\t\t\t\t// if the msg belong to the active match and not in the active msg array, then add it\r\n\t\t\t\t\t\t\tif(msg.match.id == activeChatMatchId && !activeMsgsById[msg.id]) {\r\n\t\t\t\t\t\t\t\tvar sortedInsertPosition = _.sortedIndex(activeChatMessages, msg.createdAt, 'createdAt');\r\n\t\t\t\t\t\t\t\tactiveChatMessages.splice(sortedInsertPosition, 0, msg)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn messages\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get a mutual match\r\n\t\t * @param matchId\r\n\t\t * @returns {IMatch}\r\n\t\t */\r\n\t\tfunction getMatch(matchId) {\r\n\t\t\treturn _.find(matches, 'id', matchId)\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Sets and return the active chat. New messages will be added to the array returned\r\n\t\t * @param matchId\r\n\t\t * @returns {IPromise<IChatMessage[]>}\r\n\t\t */\r\n\t\tfunction getActiveChat(matchId) {\r\n\t\t\t$log.log('getActiveChat ' + matchId)\r\n\r\n\t\t\tif(matchId === activeChatMatchId)\r\n\t\t\t\treturn $q.when(activeChatMessages)\r\n\r\n\t\t\treturn LocalDB.getChatMessages(matchId).then(function(messages) {\r\n\t\t\t\tactiveChatMatchId = matchId\r\n\t\t\t\tactiveChatMessages = messages\r\n\t\t\t\treturn activeChatMessages\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * Update the read flag on a chat\r\n\t\t * @param matchId the match/chat id\r\n\t\t * @param read {boolean} the new read value\r\n\t\t */\r\n\t\tfunction setChatRead(matchId, read) {\r\n\t\t\tif(!_.isBoolean(read))\r\n\t\t\t\tthrow 'read must be a boolean'\r\n\r\n\t\t\tvar match = _.find(matches, {'id': matchId})\r\n\t\t\tif(match != null && match.read != read) {\r\n\t\t\t\tmatch.read = read\r\n\t\t\t\tLocalDB.setChatRead(matchId, read)\r\n\r\n\t\t\t\tupdateUnreadChatsCount(matchId, read)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Update the cached state of which chats are (un)read so the unread chats count can easily be determined\r\n\t\t * @param matchId the match/chat id\r\n\t\t * @param {number|boolean} read if the chat is read/unread. A number or boolean is valid. 0 == false, 1 == true.\r\n\t\t */\r\n\t\tfunction updateUnreadChatsCount(matchId, read) {\r\n\t\t\tif(read === true || read === 1)\r\n\t\t\t\tdelete unreadChats[matchId]\r\n\t\t\telse if(read === false || read === 0)\r\n\t\t\t\tunreadChats[matchId] = true\r\n\t\t\telse\r\n\t\t\t\t$log.error('Invalid read argument to updateUnreadChatsCount()')\r\n\r\n\t\t\tunreadChatsCount = _.keys(unreadChats).length\r\n\t\t\t$log.log('unread chats: ' + unreadChatsCount)\r\n\t\t\t$rootScope.$broadcast('unreadChatsCountUpdated')\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the number of chats that have unread messages. Can be used to check if there are any unread chats\r\n\t\t * (for example to change or decorate a chat icon)\r\n\t\t * @returns {number}\r\n\t\t */\r\n\t\tfunction getUnreadChatsCount() {\r\n\t\t\treturn unreadChatsCount\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Reset the notification badge number (for iOS)\r\n\t\t * See http://blog.parse.com/announcements/badge-management-for-ios/\r\n\t\t * @returns\r\n\t\t */\r\n\t\tfunction resetBadge() {\r\n\t\t\treturn server.resetBadge()\r\n\t\t}\r\n\r\n\r\n\t\tfunction sendChatMessage(matchId, text) {\r\n\t\t\t$analytics.eventTrack('chatMessage')\r\n\t\t\tvar match = new Match()\r\n\t\t\tmatch.id = matchId\r\n\t\t\tvar message = new ChatMessage()\r\n\t\t\tmessage.match = match\r\n\t\t\tmessage.text = text\r\n\t\t\tmessage.senderName = service.profile.name\r\n\r\n\t\t\treturn server.sendChatMessage(message, _.find(matches, {'id': matchId})).then(function(savedMessage) {\r\n\t\t\t\t$log.log('sent chat message for match ' + matchId)\r\n\t\t\t\tif(activeChatMatchId == matchId) {\r\n\t\t\t\t\t$log.log('adding to active chat messages')\r\n\t\t\t\t\tactiveChatMessages.push(savedMessage)\r\n\t\t\t\t}\r\n\t\t\t\tsaveNewMessage(matchId, savedMessage)\r\n\r\n\t\t\t\treturn savedMessage\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tfunction reportProfile(profile, match) {\r\n\t\t\t$analytics.eventTrack('reportProfile')\r\n\t\t\treturn server.reportProfile(profile, match)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Saves a new chat message locally, and updates the lastMessage on the Match object, and re-sorts the matches\r\n\t\t * @param matchId\r\n\t\t * @param message\r\n\t\t */\r\n\t\tfunction saveNewMessage(matchId, message) {\r\n\t\t\t// update the last message text on the match object.\r\n\t\t\tvar match = _.find(matches, {'id': matchId})\r\n\t\t\tif(match) {\r\n\t\t\t\tmatch.lastMessage = message.text\r\n\t\t\t\tmatch.updatedAt = message.createdAt\r\n\t\t\t\t// sort so matches with the newest messages are at the top\r\n\t\t\t\tmatches.sort(function(a,b) {\r\n\t\t\t\t\tif(a.updatedAt.getTime() == b.updatedAt.getTime()) return 0\r\n\t\t\t\t\treturn a.updatedAt.getTime() > b.updatedAt.getTime() ? -1 : 1\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tLocalDB.saveChatMessage(message)\r\n\t\t\tif(message.sender != server.getUserId()) {\r\n\t\t\t\tsetChatRead(matchId, false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Call when a push notification has been received so the polling for updates can be cancelled\r\n\t\t */\r\n\t\tfunction pushNotificationReceived() {\r\n\t\t\tif(synchronizeInterval) {\r\n\t\t\t\t$log.log('Cancelling chat synchronization interval')\r\n\t\t\t\t$interval.cancel(synchronizeInterval)\r\n\t\t\t\tsynchronizeInterval = null\r\n\t\t\t\t$localStorage.pushNotificationReceived = true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction newMessageNotification(message) {\r\n\t\t\t$log.log('newMessageNotification ' + JSON.stringify(message))\r\n\t\t\tmessage.createdAt = new Date(message.createdAt)\r\n\r\n\t\t\tif(activeChatMatchId == message.match.id)\r\n\t\t\t\tactiveChatMessages.push(message)\r\n\r\n\t\t\tsaveNewMessage(message.match.id, message)\r\n\t\t\tupdateUnreadChatsCount(matchId, false)\r\n\r\n\t\t\t$rootScope.$broadcast('newMessage', message)\r\n\t\t\t$rootScope.$apply() // apply scope where newMessage event is received?\r\n\r\n\t\t\tif(service.profile.notifyMessage) {\r\n\t\t\t\tvar media = new Media(filePath('audio/chat-notification.mp3'), null, null, null);\r\n\t\t\t\t$cordovaMedia.play(media);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction sendContactMessage(message) {\r\n\t\t\t$analytics.eventTrack('contactMessage')\r\n\t\t\treturn server.sendContactMessage(message)\r\n\t\t}\r\n\r\n\r\n        function filePath(file) {\r\n            if(ionic.Platform.isIOS())\r\n                return file\r\n            else if(ionic.Platform.isAndroid())\r\n                return '/android_asset/www/' + file\r\n            else\r\n                return file\r\n        }\r\n\r\n\t\tfunction setPhoto(base64data) {\r\n\r\n\t\t\treturn server.saveFile(\"photo.png\", base64data).then(file => {\r\n\t\t\t\t$log.log('photo saved. saving profile...')\r\n\t\t\t\tvar profileUpdate = {}\r\n\t\t\t\tprofileUpdate.photos = service.profile.photos\r\n\t\t\t\tif(!profileUpdate.photos) {\r\n\t\t\t\t\tprofileUpdate.photos = []\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprofileUpdate.photos.push(file)\r\n\r\n\t\t\t\treturn server.saveProfile(service.profile, profileUpdate)\r\n\t\t\t}).then(result => {\r\n\t\t\t\t$log.log(\"saved profile with photo\")\r\n\t\t\t\treturn result\r\n\t\t\t}, error => {\r\n\t\t\t\t$log.log(\"error saving photo file to profile \" + JSON.stringify(error))\r\n\t\t\t\treturn $q.reject(error)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tfunction saveBirthdate(birthdate) {\r\n\t\t\tservice.profile.birthdate = birthdate\r\n\t\t\tservice.profile.ageFrom = service.profile.age - 5\r\n\t\t\tif(service.profile.ageFrom < 18) service.profile.ageFrom = 18\r\n\t\t\tservice.profile.ageTo = service.profile.age + 5\r\n\t\t\treturn server.saveProfile(service.profile, service.profile)\r\n\t\t}\r\n\r\n\t\tfunction convertImgToBase64(url, outputFormat){\r\n\t\t\tvar q = $q.defer()\r\n\t\t    var canvas = document.createElement('CANVAS'),\r\n\t\t        ctx = canvas.getContext('2d'),\r\n\t\t        img = new Image\r\n\t\t    img.crossOrigin = 'Anonymous'\r\n\t\t    img.onload = function(){\r\n\t\t        var dataURL\r\n\t\t        canvas.height = img.height\r\n\t\t        canvas.width = img.width\r\n\t\t        ctx.drawImage(img, 0, 0)\r\n\t\t        dataURL = canvas.toDataURL(outputFormat)\r\n\t\t        canvas = null\r\n\t\t\t\tq.resolve(dataURL)\r\n\t\t    }\r\n\t\t\timg.onerror = function(){ q.reject('Failed to load image ' + url)}\r\n\t\t    img.src = url\r\n\t\t\treturn q.promise\r\n\t\t}\r\n\t})\r\n\r\n})(); // end IIFE\r\n","/**\r\n * @typedef {Object} User\r\n * @property {boolean} emailVerified - the match object\r\n * @property {string[]} matches - an array of the ids of the Match objects that are a mutual match\r\n */\r\nvar userFields = [\r\n    'emailVerified', 'matches', 'profile'\r\n]\r\n\r\n// See IProfile in data-model.ts\r\nvar profileFields = [\r\n    'uid',\r\n    'name',\r\n    'birthdate', 'age',\r\n    'about',\r\n    'photos',\r\n    'notifyMatch', 'notifyMessage',\r\n    'distance', 'distanceType',\r\n    'location', 'gps',\r\n    'enabled',\r\n    'gender', 'guys', 'girls',\r\n    'ageFrom', 'ageTo' ];\r\n\r\nvar Profile = Parse.Object.extend({\r\n    className : \"Profile\",\r\n    attrs : profileFields\r\n})\r\n\r\n\r\n/**\r\n * @typedef {Object} Match\r\n * @property {string} uid1 - the id of the user 1 in the match (being the lowest ordered id of the two)\r\n * @property {string} uid2 - the id of the user 2 in the match (being the highest ordered id of the two)\r\n * @property {string} uid1action - the action the user with uid1 took. L for like, R for reject, or O if the other user rejected first\r\n * @property {string} uid2action - the action the user with uid2 took. L for like, R for reject, or O if the other user rejected first\r\n * @property {string} state - the state of the match. P if one user has liked. R if one user has rejected. M if a mutual match. D if one user has deleted what was previously a mutual match\r\n * @property {Profile} profile1 - if a mutual match then the profile of user with uid1\r\n * @property {Profile} profile2 - if a mutual match then the profile of user with uid2\r\n */\r\nvar matchFields = ['uid1', 'uid2', 'uid1action', 'uid2action', 'state', 'profile1', 'profile2']\r\nvar Match = Parse.Object.extend({\r\n    className : \"Match\",\r\n    attrs : matchFields\r\n})\r\n// Match also has the fields lastMessage and read in the local copy\r\n\r\n/**\r\n * @typedef {Object} ChatMessage\r\n * @property {Object} match - the match object\r\n * @property {string[]} userIds - an array of the user ids who are in this chat. This allows indexing all chats by user for efficient loading of the latest messages for a user\r\n * @property {string} text - the message text\r\n * @property {string} sender - the user id of the sender\r\n * @property {Date} createdAt - the date this message was created\r\n */\r\n// senderName is de-normalised here to avoid an API call in the ChatMessage.afterSave hook\r\nvar chatMessageFields = ['match', 'userIds', 'text', 'sender', 'senderName']\r\nvar ChatMessage = Parse.Object.extend({\r\n    className : \"ChatMessage\",\r\n    attrs : chatMessageFields\r\n})\r\n\r\n/**\r\n * @typedef {Object} Report\r\n * @property {Object} match - (optional) the Match being reported about\r\n * @property {string} reportedBy - the id of the user who submitted the report\r\n * @property {string} reported - the id of the user who was reported\r\n * @property {Date} updatedAt - the date this report was last updated\r\n * @property {Date} createdAt - the date this report was created\r\n */\r\nvar reportFields = ['matchId', 'reportedBy', 'reported']\r\nvar Report = Parse.Object.extend({\r\n    className : \"Report\",\r\n    attrs : reportFields\r\n})\r\n\r\n\r\n/**\r\n * @typedef {Object} ContactMessage\r\n * @property {Object} user - the user who sent the message\r\n * @property {string} message - the message\r\n * @property {Date} updatedAt - the date this message was last updated\r\n * @property {Date} createdAt - the date this message was created\r\n */\r\nvar contactMessageFields = ['user', 'message']\r\nvar ContactMessage = Parse.Object.extend({\r\n    className : \"ContactMessage\",\r\n    attrs : contactMessageFields\r\n})\r\n\r\n\r\nenhance(Parse.User.prototype, userFields)\r\nenhance(Profile.prototype, profileFields)\r\nenhance(Match.prototype, matchFields)\r\nenhance(ChatMessage.prototype, chatMessageFields)\r\nenhance(Report.prototype, reportFields)\r\nenhance(ContactMessage.prototype, contactMessageFields)\r\n\r\nfunction enhance(prototype, fields) {\r\n    for (var i = 0; i < fields.length; i++) {\r\n        (function() {\r\n            var propName = fields[i]\r\n            var proto = prototype\r\n            Object.defineProperty(proto, propName, {\r\n                get : function() {\r\n                    return this.get(propName)\r\n                },\r\n                set : function(value) {\r\n                    this.set(propName, value)\r\n                }\r\n            })\r\n        })()\r\n    }\r\n}\r\n\r\n\r\nObject.defineProperty(Profile.prototype, 'photoUrl', {\r\n    get : function() {\r\n        if(this.photos && this.photos.length)\r\n            return this.photos[0].url()\r\n        return 'img/generic_avatar.jpg'\r\n    }\r\n})\r\n\r\nObject.defineProperty(Match.prototype, 'profileId', {\r\n    get : function() {\r\n        if(this.otherProfileId != null)\r\n            return this.otherProfileId\r\n        if(this.uid1 == Parse.User.current().id)\r\n            return this.profile2.id\r\n        if(this.uid2 == Parse.User.current().id)\r\n            return this.profile1.id\r\n        return null\r\n    }\r\n})\r\n\r\nObject.defineProperty(Match.prototype, 'profile', {\r\n    get : function() {\r\n        if(this.otherProfile)\r\n            return this.otherProfile\r\n        if(this.otherProfileId)\r\n            return this.otherProfileId == this.profile1.id ? this.profile1 : this.profile2\r\n        if(this.uid1 == Parse.User.current().id)\r\n            return this.profile2\r\n        if(this.uid2 == Parse.User.current().id)\r\n            return this.profile1\r\n        return null\r\n    },\r\n    set : function(obj) {\r\n        this.otherProfile = obj\r\n    }\r\n})\r\n\r\n\r\n\r\nangular.module('service.parse', ['constants'])\r\n    .factory('ParseService', function($q, $log, parseAppId, parseJavascriptKey, parseClientKey) {\r\n\r\n        Parse.initialize(parseAppId, parseJavascriptKey)\r\n\r\n        var service = {\r\n            // methods\r\n            init : init,\r\n            facebookLogin: facebookLogin,\r\n            linkedInLogin: linkedInLogin,\r\n            signUp : signUp,\r\n            logIn : logIn,\r\n            autoLogin : autoLogin,\r\n            registerPush: registerPush,\r\n            reloadUser : reloadUser,\r\n            requestPasswordReset : requestPasswordReset,\r\n            copyFacebookProfile : copyFacebookProfile,\r\n            getUserId: getUserId,\r\n            getProfile : getProfile,\r\n            getProfileForMatch: getProfileForMatch,\r\n            convertLocation : convertLocation,\r\n            saveSettings : saveSettings,\r\n            saveProfile : saveProfile,\r\n            saveFile: saveFile,\r\n            searchProfiles: searchProfiles,\r\n            processProfile : processProfile,\r\n            deleteUnmatched : deleteUnmatched,\r\n            getMatches: getMatches,\r\n            getChatMessages : getChatMessages,\r\n            loadChatMessages : loadChatMessages,\r\n            sendChatMessage : sendChatMessage,\r\n            removeMatch : removeMatch,\r\n            reportProfile : reportProfile,\r\n            sendContactMessage: sendContactMessage,\r\n            resetBadge: resetBadge,\r\n            logout : logout,\r\n            deleteAccount: deleteAccount\r\n        }\r\n\r\n        return service\r\n\r\n\r\n        // Constructs the argument for the Parse login from the Facebook response\r\n        function parseFbAuth(fbResponse) {\r\n            var parseFbAuth = {}\r\n            parseFbAuth.id = fbResponse.authResponse.userID\r\n            parseFbAuth.access_token = fbResponse.authResponse.accessToken\r\n            var expiryDate = new Date()\r\n            expiryDate.setSeconds(expiryDate.getSeconds() + fbResponse.authResponse.expiresIn)\r\n            parseFbAuth.expiration_date = expiryDate.toISOString()\r\n            return parseFbAuth\r\n        }\r\n\r\n\r\n        function init() {\r\n            // $log.info('ParseService.init')\r\n        }\r\n\r\n        /**\r\n         * Registers a new user with their email and password\r\n         * @param {string} email\r\n         * @param {string} password\r\n         * @returns {Promise} a promise which resolves if the signup is a success\r\n         */\r\n        function signUp(email, password) {\r\n            // we are using email as the username\r\n            // Parse actually has a separate email field, but you can use an email as the username\r\n\r\n            var username = email\r\n\r\n            return Parse.User.signUp(username, password, {email: email}).then(function(result) {\r\n                registerPush()\r\n                return result\r\n            }, function(error){\r\n                $log.log('signUp error: ' + JSON.stringify(error))\r\n                // {\"code\":202,\"message\":\"username campers@gmail.com already taken\"}\r\n                // TODO transform to our own app error\r\n                return error\r\n            })\r\n        }\r\n\r\n        /**\r\n         * Logs in a user with their email and password\r\n         * @param {string} email\r\n         * @param {string} password\r\n         * @returns {Promise} a promise which resolves if the login is a success\r\n         */\r\n        function logIn(email, password) {\r\n            return Parse.User.logIn(email, password).then(function(result) {\r\n                registerPush()\r\n                return result\r\n            }, function(error) {\r\n                // {\"code\":101,\"message\":\"invalid login parameters\"}\r\n                // TODO transform to our own app error\r\n                return error\r\n            })\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param facebookResponse the JSON returned from a Facebook call to getLoginStatus() or login()\r\n         * that has a status of 'connected'\r\n         * @returns {Promise} a promise which will resolve if the user is successfully authenticated\r\n         */\r\n        function facebookLogin(facebookResponse) {\r\n            return Parse.FacebookUtils.logIn(parseFbAuth(facebookResponse)).then(function(result){\r\n                registerPush()\r\n                return result\r\n            })\r\n        }\r\n\r\n\r\n        function linkedInLogin(authData) {\r\n            return Parse.Cloud.run('LoadLinkedInMember', {authData: authData})\r\n                .then(sessionToken => Parse.User.become(sessionToken))\r\n                .fail(_unwrapError)\r\n        }\r\n\r\n        /**\r\n         * Copies the users Facebook profile data to their Profile object\r\n         * @returns {Promise<IProfile>} A promise resolving to the updates to users profile (to update the cached profile without another server call)\r\n         */\r\n        function copyFacebookProfile() {\r\n            return Parse.Cloud.run('CopyFacebookProfile').fail(_unwrapError)\r\n        }\r\n\r\n        function autoLogin() {\r\n            registerPush()\r\n        }\r\n\r\n        /**\r\n         * Registers for the Parse Push notifications by subscribing to a channel named user_<user_id>\r\n         */\r\n        function registerPush() {\r\n            // On a successful authentication register the push notifications\r\n            if(typeof ParsePushPlugin === 'undefined') // ignore when developing in the browser\r\n                return\r\n\r\n            ParsePushPlugin.registerDevice({ appId: parseAppId, clientKey: parseClientKey, ecb:\"onNotification\", onOpen:\"onNotificationOpen\"},\r\n                function() {\r\n                    $log.log('successfully registered device for Parse Push')\r\n                    ParsePushPlugin.getInstallationId(function(id) {\r\n                        $log.log('Parse Push InstallationId ' + id)\r\n                    }, function(e) {\r\n                        $log.log('getInstallationId error')\r\n                    })\r\n                    ParsePushPlugin.subscribe('user_' + Parse.User.current().id, function() {\r\n                        $log.log('Subscribed to parse push channel ' + 'user_' + Parse.User.current().id)\r\n                    }, function(e) {\r\n                        $log.log('Parse Push subscribe error ' + e)\r\n                    })\r\n                }, function(e) {\r\n                    $log.log('ParsePushPlugin error registering device: ' + e)\r\n                })\r\n\r\n            ParsePushPlugin.on('receivePN', function(pn){\r\n                onNotification(pn)\r\n            });\r\n            ParsePushPlugin.on('openPN', function(pn){\r\n                onNotificationOpen(pn)\r\n            });\r\n        }\r\n\r\n\r\n        /**\r\n         * Reload the user from the server\r\n         * @returns {Promise<User>} A promise which resolves to the current user\r\n         */\r\n        function reloadUser() {\r\n            return Parse.User.current().fetch()\r\n        }\r\n\r\n\r\n        /**\r\n         * @param email the email address for the user to lookup to reset, or if null the current users email\r\n         * @returns {Promise} A promise which resolves if the request to the server completed\r\n         */\r\n        function requestPasswordReset(email) {\r\n            if(!email && Parse.User.current() != null)\r\n                email = Parse.User.current().getEmail()\r\n            return Parse.User.requestPasswordReset(email)\r\n        }\r\n\r\n        /**\r\n         * @returns {string} the id of the current user\r\n         */\r\n        function getUserId() {\r\n            return Parse.User.current().id\r\n        }\r\n\r\n        /**\r\n         * Loads the profile for the current user, and creates one if it doesn't exist\r\n         * @returns {IPromise<Profile>} A promise which resolves to the profile of the current user, or null if unavailable\r\n         */\r\n        function getProfile() {\r\n            var user = Parse.User.current()\r\n            var profile = user.profile\r\n            if(profile)\r\n                return profile.fetch() // reload from the server (TODO or cache in localStorage for faster login?)\r\n\r\n            $log.debug('getProfile() fetching user')\r\n            // If we've just created the user then the Profile won't be on the local User object yet, so reload it\r\n            return user.fetch().then(() => {\r\n                // Just in case the Profile.afterSave hook hasn't saved the reference back to the User object yet\r\n                // then reload the user again (Should really allow up to 3 seconds in case the server is being slow)\r\n                if(user.profile)\r\n                    return $q.when()\r\n                else {\r\n                    $log.debug('getProfile() fetching user again')\r\n                    return user.fetch()\r\n                }\r\n            }).then(() => user.profile) // user.profile could be null if the save of the Profile on the server failed\r\n        }\r\n\r\n\r\n        /**\r\n         * Loads a profile for a mutual match\r\n         * @param id the mutual match id\r\n         * @returns {Promise<IProfile>} a promise which resolves to the profile\r\n         */\r\n        function getProfileForMatch(matchId) {\r\n            return Parse.Cloud.run('GetProfileForMatch', { matchId: matchId })\r\n        }\r\n\r\n\r\n        /**\r\n         * Converts a latitude and longitude into a Geo object used by the backend, and reducing accuracy for privacy\r\n         * @see http://ngcordova.com/docs/plugins/geolocation/\r\n         * @param location\r\n         * @returns {Parse.GeoPoint}\r\n         */\r\n        function convertLocation(latitude, longitude) {\r\n            // Rounds the locations from the GPS service to 2 decimal places (~1km) for privacy\r\n            // http://stackoverflow.com/questions/7167604/how-accurately-should-i-store-latitude-and-longitude\r\n            // http://blog.includesecurity.com/2014/02/how-i-was-able-to-track-location-of-any.html\r\n            return new Parse.GeoPoint({latitude: Math.round(latitude * 100) / 100, longitude: Math.round(longitude * 100) / 100})\r\n        }\r\n\r\n\r\n        function saveSettings(profile, profileChanges) {\r\n            var mods = {notifyMatch: profileChanges.notifyMatch, notifyMessage:profileChanges.notifyMessage, distanceType:profileChanges.distanceType}\r\n            return profile.save(mods)\r\n        }\r\n\r\n        function saveProfile(profile, profileChanges) {\r\n\r\n            if(profileChanges && profileChanges.location) {\r\n                // Convert to the Parse GeoPoint type\r\n                profileChanges.location = convertLocation(profileChanges.location.latitude, profileChanges.location.longitude)\r\n            }\r\n\r\n            // Workaround for re-saving file objects\r\n            // See http://stackoverflow.com/questions/25297590/saving-javascript-object-that-has-an-array-of-parse-files-causes-converting-cir\r\n            if(profileChanges && profileChanges.photos) {\r\n                profileChanges.photos = _.map(profileChanges.photos, file => {\r\n                    return {name: file.name, url: file.url(), __type: 'File'}\r\n                })\r\n            }\r\n\r\n            return profile.save(profileChanges)\r\n        }\r\n\r\n        /**\r\n         * Saves a file\r\n         * @param filename the name of the file\r\n         * @param base64 the file data encoded with base64\r\n         * @returns {Promise} a promise which resolves to the file object\r\n         */\r\n        function saveFile(filename, base64) {\r\n            var imgFile = new Parse.File(filename, {\r\n                base64 : base64\r\n            })\r\n            $log.log('saving file ' + filename)\r\n            return imgFile.save()\r\n        }\r\n\r\n\r\n        /**\r\n         * Processes a like/pass of a profile. If its a mutual match, then the Match object will be returned\r\n         * @param {Profile} profile\r\n         * @param {boolean} liked true if the user liked the profile, false if the user passed/rejected\r\n         * @returns {Promise<Match>} a promise resolving to a Match if it was a mutual match, else null\r\n         */\r\n        function processProfile(profile, liked) {\r\n            // TODO rename cloud function to ProcessProfile\r\n            return Parse.Cloud.run('ProcessMatch', { otherUserId: profile.uid, liked: liked })\r\n        }\r\n\r\n\r\n        /**\r\n         * Queries for profiles which:\r\n         * 1. Match the search criteria from the current users profile\r\n         * 2. Haven't been liked/passed by the current user\r\n         * 3. Haven't been passed by the other user\r\n         * @param {IProfile} searchParameters the search criteria\r\n         * @returns {Promise<Profile[]>} a promise resolving to an array of profiles\r\n         */\r\n        function searchProfiles(searchParameters) {\r\n            if(!searchParameters)\r\n                $log.error('search parameters were not provided')\r\n            // Can't use a Parse object as a param, so copy the fields. Could copy only the required search fields.\r\n            var searchParams = {};\r\n            for(var i=0; i<profileFields.length; i++)\r\n                searchParams[profileFields[i]] = searchParameters[profileFields[i]]\r\n            return Parse.Cloud.run('GetMatches', searchParams)\r\n        }\r\n\r\n        /**\r\n         * Loads the mutual matches for the given ids\r\n         * @param {string[]} matchIds An array of the match ids\r\n         * @returns {Promise<IMatch[]>} an array of the mutual matches\r\n         */\r\n        function getMatches(matchIds) {\r\n            if(matchIds.length === 0)\r\n                return $q.when([])\r\n\r\n            return Parse.Cloud.run('GetMutualMatches', {matchIds: matchIds})\r\n        }\r\n\r\n        ///**\r\n        // * Loads a mutual match with the matched profile\r\n        // * @param id the match id\r\n        // * @returns {Promise<IMatch>} a promise which resolves to the match\r\n        // */\r\n        //function getMutualMatch(matchId) {\r\n        //    return Parse.Cloud.run('GetMutualMatch', { matchId: matchId })\r\n        //}\r\n\r\n\r\n        /**\r\n         * Loads the chat message for a mutual match\r\n         * @param {Match} match\r\n         * @returns {Promise<ChatMessage[]>} a promise resolving to an array of the ChatMessage's\r\n         */\r\n        function getChatMessages(matchId) {\r\n            var messagesQuery = new Parse.Query(\"ChatMessage\")\r\n            var match = new Match()\r\n            match.id = matchId\r\n            messagesQuery.equalTo(\"match\", match)\r\n            messagesQuery.ascending('createdAt')\r\n            messagesQuery.limit(1000) // TODO handle more than 1000\r\n            return messagesQuery.find()\r\n        }\r\n\r\n\r\n        /**\r\n         * Loads all the chat messages for the match/chats the user is a member of.\r\n         * A date can be provided to load the most recent messages\r\n         * @param {Date} from the date to load the latest messages from, or null to load all\r\n         * @returns {Promise<ChatMessage[]>} a promise resolving to an array of the ChatMessage's\r\n         */\r\n        function loadChatMessages(fromDate) {\r\n            var messagesQuery = new Parse.Query(\"ChatMessage\")\r\n            messagesQuery.equalTo('userIds', getUserId())  // Find where the userIds array contains user.id\r\n            if(fromDate)\r\n                messagesQuery.greaterThan('createdAt', fromDate)\r\n            messagesQuery.ascending('createdAt')\r\n            messagesQuery.limit(1000)\r\n            // TODO handle if more than 1000? If a user logs into an existing account then just loading most recent 1000 could be enough\r\n            return messagesQuery.find()\r\n        }\r\n\r\n\r\n        /**\r\n         * Send a chat message. This sends a push notification to the recipient.\r\n         * @param {ChatMessage} message\r\n         * @returns {Promise<ChatMessage>} a promise which resolves to the saved/sent message\r\n         */\r\n        function sendChatMessage(message, match) {\r\n            var acl = new Parse.ACL()\r\n            acl.setReadAccess(match.uid1, true)\r\n            acl.setReadAccess(match.uid2, true)\r\n            if(getUserId() === match.uid1)\r\n                acl.setWriteAccess(match.uid1, true)\r\n            else\r\n                acl.setWriteAccess(match.uid2, true)\r\n            message.setACL(acl)\r\n            return message.save()\r\n        }\r\n\r\n        /**\r\n         * Unmatches an existing mutual match.  Sends a push notification to other user so this match can be removed from their matches too\r\n         * @param {string} matchId the id of the match to remove\r\n         * @returns {Promise} a promise which resolves when the remove is complete\r\n         */\r\n        function removeMatch(matchId) {\r\n            return Parse.Cloud.run('RemoveMatch', { matchId: matchId })\r\n        }\r\n\r\n        /**\r\n         * Reports a match for spam or inappropriate images/chat\r\n         * @param {Object} profile the profile of the user to report\r\n         * @param {Object} match (optional) the related Match to report about\r\n         * @returns {Promise} a promise which resolves when the match has been reported\r\n         */\r\n        function reportProfile(profile, match) {\r\n            // TODO ACL in cloud code\r\n            var report = new Report()\r\n            report.reported = profile.uid\r\n            report.reportedBy = getUserId()\r\n            report.match = match\r\n            return report.save()\r\n        }\r\n\r\n        /**\r\n         * This is only for test purposes.\r\n         * Delete all the Match objects where only one person has liked or either have rejected\r\n         * @returns {Promise} a promise which resolves when the matches have been deleted\r\n         */\r\n        function deleteUnmatched() {\r\n\r\n            var matches1Query = new Parse.Query(\"Match\")\r\n            matches1Query.equalTo(\"uid1\", Parse.User.current().id)\r\n            matches1Query.containedIn('state', ['P','R'])\r\n\r\n            var matches2Query = new Parse.Query(\"Match\")\r\n            matches2Query.equalTo(\"uid2\", Parse.User.current().id)\r\n            matches1Query.containedIn('state', ['P','R'])\r\n\r\n            return Parse.Query.or(matches1Query, matches2Query).find().then(function(matches){\r\n                $log.log('found ' + matches.length + ' rejected matches to delete')\r\n                return Parse.Object.destroyAll(matches)\r\n            })\r\n        }\r\n\r\n        /**\r\n         * Sends a message to the admin/staff\r\n         * @param {string} message - the message from the user\r\n         * @returns {Promise} a promise which resolves when the message has been sent\r\n         */\r\n        function sendContactMessage(message) {\r\n            var contactMessage = new ContactMessage()\r\n            contactMessage.message = message\r\n            return contactMessage.save()\r\n        }\r\n\r\n        /**\r\n         * Reset the notification badge number (for iOS)\r\n         * See http://blog.parse.com/announcements/badge-management-for-ios/\r\n         * @returns\r\n         */\r\n        function resetBadge() {\r\n            if(typeof ParsePushPlugin !== 'undefined' && ionic.Platform.isIOS())\r\n                ParsePushPlugin.resetBadge(\r\n                    () => $log.info('notification badge reset'),\r\n                    (error) => $log.error('error resetting badge ' + JSON.stringify(error))\r\n                )\r\n        }\r\n\r\n        /**\r\n         * Deletes all the matches, messages and profile data for this users account\r\n         * @returns {Promise} a promise which resolves when all the data has been deleted\r\n         */\r\n        function deleteAccount() {\r\n            return Parse.Cloud.run('DeleteAccount')\r\n        }\r\n\r\n        /**\r\n         * Logs the user out and un-subscribes from Push notifications\r\n         */\r\n        function logout() {\r\n            if(typeof ParsePushPlugin != 'undefined' && Parse.User.current()) {\r\n                ParsePushPlugin.unsubscribe('user_' + Parse.User.current().id, function(msg) {\r\n                    $log.log('ParsePush unsubscribed')\r\n                }, function(e) {\r\n                    $log.log('ParsePush unsubscribe error ' + e)\r\n                })\r\n            }\r\n            return Parse.User.logOut()\r\n        }\r\n\r\n\r\n        /**\r\n         * Parse cloud functions only return a string as an error.  If we have returned a JSON string from response.error()\r\n         * then try to return the parsed object\r\n         * @param error an error from a cloud function\r\n         * @returns {*}\r\n         */\r\n        function _unwrapError(error) {\r\n            $log.debug('unwrapping ' + JSON.stringify(error))\r\n\r\n            // 141 is SCRIPT_ERROR, including when response.error() was called\r\n            if(error.code === 141) {\r\n                if(error.message && error.message.startsWith('{')) {\r\n                    try {\r\n                        error = JSON.parse(error.message)\r\n                        return error\r\n                    } catch (e) {}\r\n                }\r\n                if(error.message == 'function not found')\r\n                    $log.error('Have you deployed the latest Cloud Code?')\r\n            }\r\n            return error\r\n        }\r\n\r\n\r\n        // This isn't used any more, but could be a handy bit of code\r\n        ///**\r\n        // * Load the all the mutual matches with the other users profile set on the Match object\r\n        // * @returns {Promise<Match[]>} a promise resolving to an array of matches\r\n        // */\r\n        //function getMutualMatches() {\r\n        //    var matches1Query = new Parse.Query('Match')\r\n        //    matches1Query.equalTo('uid1', Parse.User.current().id)\r\n        //    matches1Query.equalTo('state', 'M')\r\n        //\r\n        //    var matches2Query = new Parse.Query('Match')\r\n        //    matches2Query.equalTo('uid2', Parse.User.current().id)\r\n        //    matches2Query.equalTo('state', 'M')\r\n        //\r\n        //    // It would be nice to include the profile objects, but parse doesn't support include() in the subqueries of a compound query.\r\n        //    var matchesQuery = Parse.Query.or(matches1Query, matches2Query);\r\n        //\r\n        //    var matches\r\n        //    return matchesQuery.find().then(function(result) {\r\n        //        matches = result\r\n        //        var profileIds = []\r\n        //        for(var i=0; i<matches.length;i++) {\r\n        //            profileIds.push(matches.profileId)\r\n        //        }\r\n        //        var profileQuery = new Parse.Query(Profile)\r\n        //        profileQuery.containedIn('id', profileIds)\r\n        //        return profileQuery.find()\r\n        //    }).then(function(profiles) {\r\n        //        for(var i=0; i<profiles.length;i++) {\r\n        //            var profile = profiles[i]\r\n        //            profileCache[profile.id] = profile\r\n        //        }\r\n        //        for(var i=0; i<matches.length;i++) {\r\n        //            var match = matches[i]\r\n        //            match.profile = profileCache[match.profileId]\r\n        //        }\r\n        //        return matches\r\n        //    })\r\n        //}\r\n\r\n    }\r\n);\r\n\r\n","(function() {\r\n\r\n\t// SQL to model mapping\r\n\t// match\r\n\t// \t\tid (Match.id)\r\n\t//\t\tlast_update (ChatMessage[last].createdAt)\r\n\t//\t\tlast_message (ChatMessage[last].text\r\n\t//\t\tname (Profile.name)\r\n\t//\t\tprofile_id (Profile.id)\r\n\t//\t\tphoto (Profile.photo1.url)\r\n\t//\t\tread (managed locally)\r\n\t//\r\n\t// chat_message\r\n\t//\t\tid (ChatMessage.id)\r\n\t//\t\tchat_id (Match.id)\r\n\t//\t\tdate (ChatMessage.createdAt)\r\n\t//\t\tsender (ChatMessage.sender)\r\n\t//\t\tmessage (ChatMessage.text)\r\n\r\n\t// See http://www.w3.org/TR/webdatabase/ for the database API\r\n\t// And https://github.com/litehelpers/Cordova-sqlite-storage for implementation notes\r\n\r\n\tangular.module('service.localdb', [])\r\n\t\t.factory('LocalDB', function($q, $log) {\r\n\r\n\t\t\tvar db\r\n\r\n\t\t\tvar service = {\r\n\t\t\t\t// fields\r\n\t\t\t\tuserId: '',\r\n\t\t\t\t// methods\r\n\t\t\t\tinit: init,\r\n\t\t\t\tgetMatches: getMatches,\r\n\t\t\t\tsaveMatch: saveMatch,\r\n\t\t\t\tdeleteMatch: deleteMatch,\r\n\t\t\t\tgetChatMessages: getChatMessages,\r\n\t\t\t\tsaveChatMessage: saveChatMessage,\r\n\t\t\t\tsetChatRead: setChatRead,\r\n\t\t\t\tdeleteDb: deleteDb\r\n\t\t\t}\r\n\r\n\t\t\treturn service\r\n\r\n\r\n\t\t\tfunction FileUrl(fileUrl) {\r\n\t\t\t\tthis.url = function() {\r\n\t\t\t\t\treturn fileUrl\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction _mapMatchResultSet(sqlResultSet) {\r\n\t\t\t\tvar len = sqlResultSet.rows.length\r\n\t\t\t\tvar result = []\r\n\r\n\t\t\t\tfor(let i = 0; i < len; i++) {\r\n\t\t\t\t\tlet row = sqlResultSet.rows.item(i)\r\n\t\t\t\t\tlet obj = new Match()\r\n\t\t\t\t\tobj.id = row.id\r\n\t\t\t\t\tobj.uid1 = row.uid1\r\n\t\t\t\t\tobj.uid2 = row.uid2\r\n\t\t\t\t\tlet profile = new Profile()\r\n\t\t\t\t\tprofile.id = row.profile_id\r\n\t\t\t\t\tprofile.name = row.name\r\n\t\t\t\t\tprofile.about = row.about\r\n\t\t\t\t\tprofile.location = {latitude: row.latitude, longitude: row.longitude}\r\n\r\n\t\t\t\t\tlet photos = []\r\n\t\t\t\t\tprofile.photos = photos\r\n\t\t\t\t\tif(row.photo1)\r\n\t\t\t\t\t\tphotos.push(new FileUrl(row.photo1))\r\n\t\t\t\t\tif(row.photo2)\r\n\t\t\t\t\t\tphotos.push(new FileUrl(row.photo2))\r\n\t\t\t\t\tif(row.photo3)\r\n\t\t\t\t\t\tphotos.push(new FileUrl(row.photo3))\r\n\t\t\t\t\tif(row.photo4)\r\n\t\t\t\t\t\tphotos.push(new FileUrl(row.photo4))\r\n\t\t\t\t\tif(row.photo5)\r\n\t\t\t\t\t\tphotos.push(new FileUrl(row.photo5))\r\n\r\n\t\t\t\t\tprofile.age = row.age\r\n\t\t\t\t\tobj.profile = profile\r\n\t\t\t\t\tobj.otherProfileId = profile.id // for the Match prototype property profileId\r\n\t\t\t\t\tobj.lastMessage = row.last_message\r\n\t\t\t\t\tobj.updatedAt = new Date(row.updated_at)\r\n\t\t\t\t\tobj.read = row.read === 1\r\n\t\t\t\t\tresult.push(obj)\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\r\n\t\t\tfunction _mapChatMessageResultSet(sqlResultSet) {\r\n\t\t\t\tvar len = sqlResultSet.rows.length\r\n\t\t\t\tvar result = []\r\n\t\t\t\tfor(let i = 0; i < len; i++) {\r\n\t\t\t\t\tlet row = sqlResultSet.rows.item(i)\r\n\t\t\t\t\tlet obj = {}\r\n\t\t\t\t\tobj.id = row.id\r\n\t\t\t\t\tobj.match = {id: row.chat_id}\r\n\t\t\t\t\tobj.sender = row.sender\r\n\t\t\t\t\tobj.text = row.message\r\n\t\t\t\t\tobj.createdAt = new Date(row.created_at)\r\n\t\t\t\t\tresult.push(obj)\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Service functions ----------------------\r\n\r\n\t\t\tfunction init() {\r\n\t\t\t\t// Use the native sqlite plugin if it exists\r\n\t\t\t\tdb = window.sqlitePlugin ?\r\n\t\t\t\t\twindow.sqlitePlugin.openDatabase({name: \"my.db\", location: 2}) :\r\n\t\t\t\t\twindow.openDatabase('mydb', '', 'LocalDB', 2 * 1024 * 1024)\r\n\r\n\t\t\t\tconst M = new Migrator(db)\r\n\r\n\t\t\t\t// Set your migrations in the order that they need to occur\r\n\t\t\t\tM.migration(1, tx => {\r\n\t\t\t\t\ttx.executeSql('CREATE TABLE match (id varchar primary key, uid1 varchar, uid2 varchar, profile_id varchar, latitude real, longitude real, name varchar, photo1 varchar, photo2 varchar, photo3 varchar, birthdate date, last_message varchar, updated_at integer, read integer)')\r\n\t\t\t\t\ttx.executeSql('CREATE TABLE chat_message (id varchar primary key, chat_id varchar, created_at integer, sender varchar, message text)')\r\n\t\t\t\t})\r\n\t\t\t\tM.migration(2, tx => {\r\n\t\t\t\t\ttx.executeSql('ALTER TABLE match ADD COLUMN age integer')\r\n\t\t\t\t\t// migrate birthdate to age http://www.sqlite.org/lang_datefunc.html\r\n\t\t\t\t\t// tx.executeSql('UPDATE match SET age = ')\r\n\t\t\t\t\t// Increase the default maximum number of profile photos to 5\r\n\t\t\t\t\ttx.executeSql('ALTER TABLE match ADD COLUMN photo4 varchar')\r\n\t\t\t\t\ttx.executeSql('ALTER TABLE match ADD COLUMN photo5 varchar')\r\n\t\t\t\t})\r\n\t\t\t\tM.migration(3, tx => {\r\n\t\t\t\t\ttx.executeSql('ALTER TABLE match ADD COLUMN about varchar')\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// Execute will do all the migrations required for the particular user (e.g., if they're at v1 take them to v2 and then v3)\r\n\t\t\t\treturn M.execute().then(function() {\r\n\t\t\t\t\t//now go about executing your SQL or whatever to load the page or site\r\n\t\t\t\t\treturn $q.when()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Deletes data from the database tables\r\n\t\t\t * @returns {Promise} when the tables have been truncated\r\n\t\t\t */\r\n\t\t\tfunction deleteDb() {\r\n\t\t\t\t$log.log('Deleting database data')\r\n\t\t\t\tvar deferred = $q.defer()\r\n\t\t\t\tdb.transaction(function(tx) {\r\n\t\t\t\t\t\ttx.executeSql('DELETE FROM match')\r\n\t\t\t\t\t\ttx.executeSql('DELETE FROM chat_message')\r\n\t\t\t\t\t}, function(e) {\r\n\t\t\t\t\t\t$log.error('Error delete database data: ' + e.message)\r\n\t\t\t\t\t\tdeferred.reject(e)\r\n\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t$log.log('Database data deleted')\r\n\t\t\t\t\t\tdeferred.resolve()\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn deferred.promise\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction getMatches() {\r\n\t\t\t\tvar deferred = $q.defer()\r\n\t\t\t\tdb.readTransaction(function(tx) {\r\n\t\t\t\t\t\ttx.executeSql('SELECT * FROM match ORDER BY updated_at DESC', [], function(tx, sqlResultSet) {\r\n\t\t\t\t\t\t\tdeferred.resolve(_mapMatchResultSet(sqlResultSet))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}, function(e) {\r\n\t\t\t\t\t\tdeferred.reject(e)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn deferred.promise\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction saveMatch(match, profile) {\r\n\t\t\t\tvar deferred = $q.defer()\r\n\r\n\t\t\t\tdb.transaction(function(tx) {\r\n\t\t\t\t\t\tvar photos = profile.photos\r\n\t\t\t\t\t\tvar latitude, longitude\r\n\t\t\t\t\t\tvar location = profile.location\r\n\t\t\t\t\t\tif(location) {\r\n\t\t\t\t\t\t\tlatitude = location.latitude\r\n\t\t\t\t\t\t\tlongitude = location.longitude\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttx.executeSql('INSERT INTO match (id, uid1, uid2, profile_id, name, about, photo1, photo2, photo3, photo4, photo5, ' +\r\n\t\t\t\t\t\t\t'latitude, longitude, age, last_message, updated_at, read) ' +\r\n\t\t\t\t\t\t\t'VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)',\r\n\t\t\t\t\t\t\t[match.id, match.uid1, match.uid2, profile.id, profile.name, profile.about, _photo(photos, 1), _photo(photos, 2),\r\n\t\t\t\t\t\t\t\t_photo(photos, 3), _photo(photos, 4), _photo(photos, 5), latitude, longitude,\r\n\t\t\t\t\t\t\t\tprofile.age, match.lastMessage, match.updatedAt.getTime(), 0])\r\n\r\n\t\t\t\t\t}, function(e) {\r\n\t\t\t\t\t\tdeferred.reject(e)\r\n\t\t\t\t\t\t$log.error('Error saving match: ' + JSON.stringify(e))\r\n\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\tdeferred.resolve()\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn deferred.promise\r\n\t\t\t}\r\n\r\n\t\t\tfunction _photo(photos, i) {\r\n\t\t\t\treturn i <= photos.length ? photos[i - 1].url() : null\r\n\t\t\t}\r\n\r\n\t\t\tfunction deleteMatch(matchId) {\r\n\t\t\t\tvar deferred = $q.defer()\r\n\t\t\t\tdb.transaction(function(tx) {\r\n\t\t\t\t\t\ttx.executeSql('DELETE FROM match WHERE id=?', [matchId])\r\n\t\t\t\t\t\ttx.executeSql('DELETE FROM chat_message WHERE chat_id=?', [matchId])\r\n\t\t\t\t\t}, function(e) {\r\n\t\t\t\t\t\tdeferred.reject(e)\r\n\t\t\t\t\t\t$log.error('LocalDB Error deleting match: ' + JSON.stringify(e))\r\n\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\tdeferred.resolve()\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn deferred.promise\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction getChatMessages(chatId) {\r\n\t\t\t\tvar deferred = $q.defer()\r\n\t\t\t\tdb.readTransaction(function(tx) {\r\n\t\t\t\t\t\ttx.executeSql('SELECT * FROM chat_message WHERE chat_id = ? ORDER BY created_at ASC', [chatId], function(tx, sqlResultSet) {\r\n\t\t\t\t\t\t\tdeferred.resolve(_mapChatMessageResultSet(sqlResultSet))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}, function(e) {\r\n\t\t\t\t\t\tdeferred.reject(e)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn deferred.promise\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Save a chat message (if it doesn't already exist)\r\n\t\t\t * @param msg the chat message\r\n\t\t\t * @returns {Promise<boolean>} A promise which resolves to if this was inserted or false if already in the database\r\n\t\t\t */\r\n\t\t\tfunction saveChatMessage(msg) {\r\n\t\t\t\tvar deferred = $q.defer()\r\n\t\t\t\tvar isNew = false\r\n\r\n\t\t\t\tdb.transaction(function(tx) {\r\n\t\t\t\t\t\t// update the read flag to unread if the message doesn't exist in the local db\r\n\t\t\t\t\t\ttx.executeSql('UPDATE match SET read = 0 WHERE NOT EXISTS (SELECT 1 FROM chat_message WHERE id = ?)', [msg.id],\r\n\t\t\t\t\t\t\tfunction(tx, sqlResultSet) {\r\n\t\t\t\t\t\t\t\tisNew = sqlResultSet.rowsAffected > 0\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\ttx.executeSql('INSERT OR IGNORE INTO chat_message (id, chat_id, created_at, sender, message) VALUES (?,?,?,?,?)',\r\n\t\t\t\t\t\t\t[msg.id, msg.match.id, msg.createdAt.getTime(), msg.sender, msg.text])\r\n\r\n\t\t\t\t\t\t// If the message is newer then update the match updated_at\r\n\t\t\t\t\t\ttx.executeSql('UPDATE match SET updated_at = ?, last_message = ? WHERE id = ? and ? > updated_at',\r\n\t\t\t\t\t\t\t[msg.createdAt.getTime(), msg.text, msg.match.id, msg.createdAt.getTime()])\r\n\r\n\t\t\t\t\t}, function(e) {\r\n\t\t\t\t\t\tdeferred.reject(e)\r\n\t\t\t\t\t\t$log.error('Error saving chat message: ' + JSON.stringify(e))\r\n\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t$log.debug('saved chat message new:' + isNew)\r\n\t\t\t\t\t\tdeferred.resolve(isNew)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn deferred.promise\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Marks a match/chat as read\r\n\t\t\t * @param chatId\r\n\t\t\t * @param {boolean} read the read flag\r\n\t\t\t * @returns {Promise} A promise which resolves when the database transaction has completed\r\n\t\t\t */\r\n\t\t\tfunction setChatRead(chatId, read) {\r\n\t\t\t\tif(!_.isBoolean(read)) {\r\n\t\t\t\t\tthrow 'read must be a boolean. Was ' + read\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// sqlite does not have a boolean value, use 0/1\r\n\t\t\t\tvar readValue = read ? 1 : 0\r\n\r\n\t\t\t\tvar deferred = $q.defer()\r\n\t\t\t\tdb.transaction(function(tx) {\r\n\t\t\t\t\t\ttx.executeSql('UPDATE match SET read = ? WHERE id = ?', [readValue, chatId])\r\n\t\t\t\t\t}, function(e) {\r\n\t\t\t\t\t\tdeferred.reject(e)\r\n\t\t\t\t\t\t$log.error('Error updating read flag: ' + JSON.stringify(e))\r\n\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\tdeferred.resolve()\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn deferred.promise\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Modified from https://github.com/llamaluvr/JS-Migrator_Promise\r\n\t\t\tfunction Migrator(db) {\r\n\t\t\t\t// Pending migrations to run\r\n\t\t\t\tvar migrations = []\r\n\r\n\t\t\t\tvar state = 0\r\n\r\n\t\t\t\tvar MIGRATOR_TABLE = 'version'\r\n\r\n\t\t\t\t// Use this method to actually add a migration.\r\n\t\t\t\t// You'll probably want to start with 1 for the migration number.\r\n\t\t\t\tthis.migration = function(number, func) {\r\n\t\t\t\t\tmigrations[number] = func\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Execute a given migration by index\r\n\t\t\t\tfunction doMigration(number) {\r\n\t\t\t\t\tconst deferred = $q.defer()\r\n\t\t\t\t\tif(migrations[number]) {\r\n\t\t\t\t\t\tdb.transaction(t => {\r\n\t\t\t\t\t\t\tt.executeSql('update ' + MIGRATOR_TABLE + ' set version = ?', [number],\r\n\t\t\t\t\t\t\t\t\tt => {\r\n\t\t\t\t\t\t\t\t\t$log.info('Beginning migration ' + number)\r\n\t\t\t\t\t\t\t\t\tmigrations[number](t)\r\n\t\t\t\t\t\t\t\t\t$log.info('Completed migration ' + number)\r\n\t\t\t\t\t\t\t\t\tdoMigration(number + 1)\r\n\t\t\t\t\t\t\t\t\t\t.then(() => deferred.resolve())\r\n\t\t\t\t\t\t\t\t}, (t, err) => {\r\n\t\t\t\t\t\t\t\t\t$log.error('Error!: %o (while upgrading to %s from %s)', err, number)\r\n\t\t\t\t\t\t\t\t\tdeferred.reject(err)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$log.debug('Migrations complete.')\r\n\t\t\t\t\t\tstate = 2\r\n\t\t\t\t\t\tdeferred.resolve()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn deferred.promise\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// helper that actually calls doMigration from doIt.\r\n\t\t\t\tfunction migrateStartingWith(ver) {\r\n\t\t\t\t\tstate = 1\r\n\t\t\t\t\t$log.debug('Main Migrator starting')\r\n\t\t\t\t\t//return doMigration(ver + 1)\r\n\t\t\t\t\tconst deferred = $q.defer()\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn doMigration(ver + 1).then(() => deferred.resolve())\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tdeferred.reject(e)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn deferred.promise\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.execute = function() {\r\n\t\t\t\t\tconst deferred = $q.defer()\r\n\t\t\t\t\tif(state > 0) {\r\n\t\t\t\t\t\tthrow 'Migrator is only valid once -- create a new one if you want to do another migration.'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdb.transaction(t => {\r\n\t\t\t\t\t\tt.executeSql('select version from ' + MIGRATOR_TABLE, [], (t, res) => {\r\n\t\t\t\t\t\t\tvar rows = res.rows\r\n\t\t\t\t\t\t\tvar version = rows.item(0).version\r\n\t\t\t\t\t\t\t$log.info('Existing database present, migrating from ' + version)\r\n\t\t\t\t\t\t\tmigrateStartingWith(version).then(() => deferred.resolve())\r\n\t\t\t\t\t\t}, (t, err) => {\r\n\t\t\t\t\t\t\tif(err.message.match(/no such table/i)) {\r\n\t\t\t\t\t\t\t\tt.executeSql('create table ' + MIGRATOR_TABLE + '(version integer)', [], () => {\r\n\t\t\t\t\t\t\t\t\tt.executeSql('insert into ' + MIGRATOR_TABLE + ' values(0)', [], () => {\r\n\t\t\t\t\t\t\t\t\t\t$log.info('New migration database created...')\r\n\t\t\t\t\t\t\t\t\t\tmigrateStartingWith(0).then(() => deferred.resolve())\r\n\t\t\t\t\t\t\t\t\t}, (t, err) => {\r\n\t\t\t\t\t\t\t\t\t\t$log.error('Unrecoverable error inserting initial version into db: %o', err)\r\n\t\t\t\t\t\t\t\t\t\tdeferred.reject(err)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}, (t, err) => {\r\n\t\t\t\t\t\t\t\t\t$log.error('Unrecoverable error creating version table: %o', err)\r\n\t\t\t\t\t\t\t\t\tdeferred.reject(err)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$log.error('Unrecoverable error resolving schema version: %o', err)\r\n\t\t\t\t\t\t\t\tdeferred.reject(err)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\treturn deferred.promise\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t)\r\n\r\n})(); // end IIFE\r\n","var platformReady, fbLoaded\r\n\r\nvar app = angular.module('ionicApp', ['constants', 'ionic', 'AppUtil', 'templates', 'controllers', 'controllers.share', 'service.app',\r\n        'ui.slider', 'ngImgCrop', 'ngAnimate', 'pascalprecht.translate', 'emoji', 'ImgCache', 'monospaced.elastic',\r\n        'ngStorage', 'angulartics.parse', 'SocialAuth'])\r\n    .run(function ($ionicPlatform, AppService, ImgCache, $rootScope, $log, appName) {\r\n        $rootScope.appName = appName\r\n\r\n        $ionicPlatform.ready(function () {\r\n            $log.log('ionicPlatform.ready')\r\n            // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\r\n            // for form inputs)\r\n            if (window.cordova && window.cordova.plugins.Keyboard) {\r\n                cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true)\r\n            }\r\n            if (window.StatusBar) {\r\n                // org.apache.cordova.statusbar required\r\n                StatusBar.styleDefault()\r\n            }\r\n\r\n            ImgCache.init(function() {\r\n                $log.log('ImgCache init: success!')\r\n            }, function() {\r\n                $log.warn('ImgCache init: error! Check the log for errors')\r\n            })\r\n\r\n            AppService.init()\r\n            platformReady = 'true'\r\n        })\r\n    })\r\n\r\n    .config(['$translateProvider', function ($translateProvider) {\r\n        $translateProvider.translations('en', TRANSLATION_EN)\r\n        $translateProvider.translations('de', TRANSLATION_DE)\r\n        $translateProvider.preferredLanguage('en')\r\n    }])\r\n\r\n    .config(function ($compileProvider, buildEnv) {\r\n        // See https://docs.angularjs.org/guide/production\r\n        if(buildEnv === 'prod') {\r\n            console.log('Disabling $compileProvider debug info')\r\n            $compileProvider.debugInfoEnabled(false)\r\n        }\r\n    })\r\n\r\n    .config(function ($cordovaFacebookProvider, facebookAppId) {\r\n        // This is only required for the JavaScript API\r\n        $cordovaFacebookProvider.setAppID(facebookAppId, \"v2.0\")\r\n    })\r\n\r\n    .config(function ( $ionicConfigProvider) {\r\n        $ionicConfigProvider.backButton.text('').previousTitleText(false)\r\n\r\n        if(!ionic.Platform.isWebView() || ionic.Platform.isIOS()) {\r\n            // we are using iconicons 2.0 which doesn't include the iOS back button icon used by Ionic beta-14\r\n            $ionicConfigProvider.backButton.text('').icon('ion-ios-arrow-back')\r\n        }\r\n    })\r\n\r\n    .config(function(ImgCacheProvider) {\r\n        ImgCacheProvider.setOptions({\r\n            //debug: true,\r\n            usePersistentCache: true\r\n        })\r\n        // Set this option to init imgcache.js manually after device is ready\r\n        ImgCacheProvider.manualInit = true\r\n    })\r\n\r\n    .filter('escapeHTML', function() {\r\n        return function(text) {\r\n            if (text) {\r\n                return text.\r\n                    replace(/&/g, '&amp;').\r\n                    replace(/</g, '&lt;').\r\n                    replace(/>/g, '&gt;').\r\n                    replace(/'/g, '&#39;').\r\n                    replace(/\"/g, '&quot;');\r\n            }\r\n            return '';\r\n        }\r\n    })\r\n\r\n    // This allow a chat message to be sent when you tap return\r\n    // TODO maybe apply more specific, make it a class attribute\r\n    .directive('input', function($timeout) {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                'returnClose': '=',\r\n                'onReturn': '&',\r\n                'onFocus': '&',\r\n                'onBlur': '&'\r\n            },\r\n            link: function(scope, element, attr) {\r\n                element.bind('focus', function(e) {\r\n                    if (scope.onFocus) {\r\n                        $timeout(function() {\r\n                            scope.onFocus()\r\n                        })\r\n                    }\r\n                })\r\n                element.bind('blur', function(e) {\r\n                    if (scope.onBlur) {\r\n                        $timeout(function() {\r\n                            scope.onBlur()\r\n                        })\r\n                    }\r\n                })\r\n                element.bind('keydown', function(e) {\r\n                    if (e.which == 13) {\r\n                        if (scope.returnClose) element[0].blur()\r\n                        if (scope.onReturn) {\r\n                            $timeout(function() {\r\n                                scope.onReturn()\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    })\r\n;\r\n\r\n","angular.module('ionicApp').config(function ($stateProvider, $urlRouterProvider) {\r\n\r\n    $stateProvider\r\n        .state('signin', {\r\n            url: '/sign-in',\r\n            templateUrl: 'sign-in.html',\r\n            controller: 'SignInCtrl'\r\n        })\r\n        .state('emailVerification', {\r\n            url: '/emailVerification',\r\n            templateUrl: 'emailVerification.html',\r\n            controller: 'EmailVerificationCtrl'\r\n        })\r\n        .state('profileSetup', {\r\n            url: '/profileSetup',\r\n            templateUrl: 'profileSetup.html',\r\n            controller: 'ProfileSetupCtrl'\r\n        })\r\n        .state('locationSetup', {\r\n            url: '/locationSetup',\r\n            templateUrl: 'locationSetup.html',\r\n            controller: 'LocationSetupCtrl'\r\n        })\r\n        .state('termsOfUse', {\r\n            url: '/termsOfUse',\r\n            templateUrl: 'termsOfUse.html',\r\n            controller: 'TermsOfUseCtrl'\r\n        })\r\n        .state('menu', {\r\n            url: \"/menu\",\r\n            abstract: true,\r\n            templateUrl: \"menu.html\"\r\n        })\r\n        .state('menu.home', {\r\n            url: \"/home\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"swipe.html\",\r\n                    controller: \"CardsCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.card-info', {\r\n            url: \"/card-info\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"profileView.html\",\r\n                    controller: \"CardInfoCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.match-profile', {\r\n            url: \"/match-profile/:matchId/:profileId\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"matchProfile.html\",\r\n                    controller: \"MatchProfileCtrl\"\r\n                }\r\n            },\r\n            resolve: {\r\n                matchProfile: function (AppService, $stateParams) {\r\n                    if($stateParams.matchId)\r\n                        return AppService.getProfileByMatchId($stateParams.matchId)\r\n                    else if($stateParams.profileId)\r\n                        return AppService.getProfileById($stateParams.profileId)\r\n                }\r\n            }\r\n        })\r\n        .state('menu.chats', {\r\n            url: \"/chats\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"chats.html\",\r\n                    controller: \"ChatsCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.chat', {\r\n            url: \"/chat/:matchId\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"chat.html\",\r\n                    controller: \"ChatCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.profile', {\r\n            url: \"/profile\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"profile.html\",\r\n                    controller: \"ProfileCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.profile-edit', {\r\n            url: \"/profile-edit\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"profileEdit.html\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.fb-albums', {\r\n            url: '/fb-albums',\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"fbAlbums.html\",\r\n                    controller: \"FbAlbumsCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.fb-album', {\r\n            url: '/fb-album/:albumId',\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"fbAlbum.html\",\r\n                    controller: \"FbAlbumCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.crop', {\r\n            url: '/crop',\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: 'crop.html',\r\n                    controller: 'PhotoCropCtrl'\r\n                }\r\n            }\r\n        })\r\n        .state('menu.discovery', {\r\n            url: \"/discovery\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"discovery.html\",\r\n                    controller: \"DiscoveryCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.location', {\r\n            url: \"/location\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"locationMap.html\",\r\n                    controller: \"LocationCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.settings', {\r\n            url: \"/settings\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"settings.html\",\r\n                    controller: \"SettingsCtrl\"\r\n                }\r\n            }\r\n        })\r\n        .state('menu.contact', {\r\n            url: \"/contact\",\r\n            views: {\r\n                'menuContent': {\r\n                    templateUrl: \"contact.html\",\r\n                    controller: \"ContactCtrl\"\r\n                }\r\n            }\r\n        })\r\n    $urlRouterProvider.otherwise(\"/sign-in\")\r\n});","// monkey patch an IOS8 problem\n// https://github.com/angular/angular.js/issues/9128\n// This patch is for Angular v1.3.13 (which must be the version used by Ionic)\napp.config(['$provide', function($provide) {\n\n\t// Minification-safe hack.\n\tvar $$ChildScope = '$$ChildScope',\n\t\t$$watchers = '$$watchers',\n\t\t$$nextSibling = '$$nextSibling',\n\t\t$$childHead = '$$childHead',\n\t\t$$childTail = '$$childTail',\n\t\t$$listeners = '$$listeners',\n\t\t$$listenerCount = '$$listenerCount',\n\t\t$id = '$id',\n\t\t$$childScopeClass = '$$childScopeClass',\n\t\t$parent = '$parent',\n\t\t$$prevSibling = '$$prevSibling',\n\t\t$$destroyed = '$$destroyed';\n\n\n\t$provide.decorator('$rootScope', ['$delegate', function($rootScope) {\n\t\tvar proto = Object.getPrototypeOf($rootScope);\n\n\t\tfunction nextUid () {\n\t\t\treturn ++$rootScope[$id];\n\t\t}\n\n\t\t// copied from function Scope() {}\n\t\tfunction initScope(scope) {\n\t\t\t\tscope.$id = nextUid();\n\t\t\t\tscope.$$phase = scope.$parent = scope.$$watchers =\n\t\t\t\t\tscope.$$nextSibling = scope.$$prevSibling =\n\t\t\t\t\t\tscope.$$childHead = scope.$$childTail = null;\n\t\t\t\tscope.$root = this;\n\t\t\t\tscope.$$destroyed = false;\n\t\t\t\tscope.$$listeners = {};\n\t\t\t\tscope.$$listenerCount = {};\n\t\t\t\tscope.$$isolateBindings = null;\n\t\t}\n\n\t\tproto.$new = function(isolate, parent) {\n\t\t\tvar child;\n\n\t\t\tparent = parent || this;\n\n\t\t\tif (isolate) {\n\t\t\t\tchild = Object.create(Object.getPrototypeOf($rootScope)); // equivalent to new $rootScope.Scope()\n\t\t\t\tinitScope(child)\n\t\t\t\tchild.$root = this.$root;\n\t\t\t} else {\n\t\t\t\t// Only create a child scope class if somebody asks for one,\n\t\t\t\t// but cache it to allow the VM to optimize lookups.\n\t\t\t\tif (!this[$$ChildScope]) {\n\t\t\t\t\tthis[$$ChildScope] = function ChildScope() {\n\t\t\t\t\t\tthis[$$watchers] = this[$$nextSibling] =\n\t\t\t\t\t\t\tthis[$$childHead] = this[$$childTail] = null;\n\t\t\t\t\t\tthis[$$listeners] = {};\n\t\t\t\t\t\tthis[$$listenerCount] = {};\n\t\t\t\t\t\tthis[$id] = nextUid();\n\t\t\t\t\t\tthis[$$ChildScope] = null;\n\t\t\t\t\t};\n\t\t\t\t\tthis[$$ChildScope].prototype = this;\n\t\t\t\t}\n\t\t\t\tchild = new this[$$ChildScope]();\n\t\t\t}\n\t\t\tchild[$parent] = parent;\n\t\t\tchild[$$prevSibling] = parent[$$childTail];\n\t\t\tif (parent[$$childHead]) {\n\t\t\t\tparent[$$childTail][$$nextSibling] = child;\n\t\t\t\tparent[$$childTail] = child;\n\t\t\t} else {\n\t\t\t\tparent[$$childHead] = parent[$$childTail] = child;\n\t\t\t}\n\n\t\t\t// When the new scope is not isolated or we inherit from `this`, and\n\t\t\t// the parent scope is destroyed, the property `$$destroyed` is inherited\n\t\t\t// prototypically. In all other cases, this property needs to be set\n\t\t\t// when the parent scope is destroyed.\n\t\t\t// The listener needs to be added after the parent is set\n\t\t\tif (isolate || parent != this) child.$on('$destroy', destroyChild);\n\n\t\t\treturn child;\n\n\t\t\tfunction destroyChild() {\n\t\t\t\tchild[$$destroyed] = true;\n\t\t\t}\n\t\t}\n\n\t\t$rootScope.$new = proto.$new;\n\t\treturn $rootScope;\n\t}]);\n\n}]);\n\n","\r\nangular.module('controllers', ['service.app', 'ngMaterial', 'ngAnimate', 'ngCordova', 'ionic.contrib.ui.tinderCards'])\r\n\r\n    .controller('SignInCtrl', function ($scope, $log, $rootScope, $state, $http, $timeout, $cordovaFacebook, $q, $ionicPopup,\r\n                                        $ionicModal, $ionicLoading, $ionicHistory, AppService, AppUtil, SocialAuth,\r\n                                        linkedInId,linkedInSecret) {\r\n\r\n        /**\r\n         * The SignInCtrl handle the flow for registering and authenticating a user. There are currently three entry points:\r\n         * 1. emailRegister() - registers a new user and logs them in\r\n         * 2. emailLogin() - logs in a previously registered user\r\n         * 3. facebookLogin() - logs in with facebook and creates a user if they didn't already exist\r\n         *\r\n         * All three call checkProfile() which starts the post-authentication login sequence that is mediated by\r\n         * AppService.goToNextLoginState()\r\n         */\r\n\r\n        // Data for the username/password form\r\n        $scope.credentials = {email:'',password:''}\r\n\r\n        // These two properties are for dynamically updating the CSS classes on the logo and login form/button\r\n        $scope.logo = {class: ''}\r\n        $scope.showForm = false\r\n        $scope.showLogo = false\r\n        $scope.showResetPassword = false\r\n\r\n        // After an error resets the CSS styles so the login form/button displays\r\n        function resetStyles() {\r\n            $scope.showForm = true\r\n            $scope.showLogo = false\r\n            $scope.logo.class = ''\r\n            $scope.status = ''\r\n        }\r\n        // Hides the login form/buttons and displays the animated logo\r\n        function setLoggingInStyles() {\r\n            $scope.showForm = false\r\n            $scope.showLogo = true\r\n            $scope.logo.class = 'pulse'\r\n            $scope.status = '' // the translation key to display on the login screen\r\n        }\r\n\r\n\r\n        $scope.showResetPasswordForm = function() {\r\n            $scope.showForm = false\r\n            $scope.showResetPassword = true\r\n        }\r\n        $scope.hideResetPasswordForm = function() {\r\n            $scope.showForm = true\r\n            $scope.showResetPassword = false\r\n        }\r\n        $scope.resetPassword = function() {\r\n            if(validateEmail()) return\r\n\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            AppService.requestPasswordReset($scope.credentials.email).then(function() {\r\n                $scope.hideResetPasswordForm()\r\n                AppUtil.toastSimpleTranslate('PASSWORD_RESET_SENT')\r\n            }, function(error){\r\n                AppUtil.toastSimpleTranslate('REQUEST_FAILED')\r\n            }).always(function(){\r\n                $ionicLoading.hide()\r\n            })\r\n        }\r\n\r\n        $scope.emailRegister = function () {\r\n            if(validateEmailPassword()) return\r\n            setLoggingInStyles()\r\n            AppService.signUp($scope.credentials.email, $scope.credentials.password).then(function(result){\r\n                $log.log('user signed up success')\r\n                checkProfile()\r\n            }, function(error){\r\n                resetStyles()\r\n                $log.error('user signed up error ' + JSON.stringify(error))\r\n                AppUtil.toastSimple(error.message)\r\n            })\r\n        }\r\n\r\n        $scope.emailLogin = function () {\r\n            if(validateEmailPassword()) return\r\n            setLoggingInStyles()\r\n            AppService.logIn($scope.credentials.email, $scope.credentials.password).then(function(result){\r\n                $log.log('user login success')\r\n                checkProfile()\r\n            }, function(error) {\r\n                resetStyles()\r\n                $log.error('user login error ' + JSON.stringify(error))\r\n                AppUtil.toastSimple('Login error')\r\n            })\r\n        }\r\n\r\n        function validateEmailPassword() {\r\n            return validateEmail() || validatePassword()\r\n        }\r\n\r\n        function validatePassword() {\r\n            if($scope.credentials.password.length < 6) {\r\n                AppUtil.toastSimpleTranslate('PASSWORD_LENGTH')\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n\r\n        function validateEmail() {\r\n            var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            if(!re.test($scope.credentials.email)) {\r\n                AppUtil.toastSimpleTranslate('INVALID_EMAIL')\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n\r\n\r\n        $scope.linkedInLogin = function () {\r\n            setLoggingInStyles()\r\n            $scope.status = 'LOGGING_IN_TO_LINKEDIN'\r\n            SocialAuth.linkedIn(linkedInId, linkedInSecret, ['r_basicprofile', 'r_emailaddress'], 'rtbwrtusgfxytr')\r\n                .then(httpResponse => AppService.linkedInLogin(httpResponse))\r\n                .then(\r\n                    () => checkProfile(null),\r\n                    error => {\r\n                        resetStyles()\r\n                        $log.error(error)\r\n                        AppService.logout()\r\n                        AppUtil.toastSimple('LinkedIn login failed')\r\n                    }\r\n                )\r\n        }\r\n\r\n\r\n        $scope.facebookLogin = function () {\r\n            setLoggingInStyles()\r\n            $scope.status = 'LOGGING_IN_TO_FB'\r\n\r\n            connectToFacebook().then(function(result){\r\n                    return AppService.facebookLogin(result)\r\n                }).then(function(result) {\r\n                    // Load the user profile\r\n                    $scope.status = 'LOADING_PROFILE'\r\n                    return AppService.loadProfile()\r\n                }).then(function(profile) {\r\n                    // If we've logged in for the first time (i.e. profile.name isn't set) then copy the facebook profile\r\n                    if(!profile.name) {\r\n                        $log.log('Initialising profile with facebook profile')\r\n                        $scope.status = 'LOADING_FB_PROFILE'\r\n                        return AppService.copyFacebookProfile()\r\n                    } else {\r\n                        return profile // already logged in with FB\r\n                    }\r\n                }).then(() => checkProfile(), $scope._handleFacebookLoginError)\r\n        }\r\n\r\n        $scope._handleFacebookLoginError = error => {\r\n            resetStyles()\r\n\r\n            if(error.code && error.code === 'MINIMUM_AGE_ERROR') {\r\n                $ionicPopup.alert({\r\n                    title: 'Error',\r\n                    template: 'You do not meet the age requirements for this app.'\r\n                }).then(() => AppService.logout())\r\n                //.then(() => ionic.Platform.exitApp())\r\n                return\r\n            }\r\n\r\n            // {\"code\":251,\"message\":\"The supplied Facebook session token is expired or invalid.\"}\r\n            $log.error('Facebook login error: ' + JSON.stringify(error))\r\n            AppService.logout()\r\n            AppUtil.toastSimpleTranslate('LOGIN_ERROR')\r\n        }\r\n\r\n\r\n        /**\r\n         * @param profile {IProfile} The user profile if it has already been loaded, else null\r\n         */\r\n        function checkProfile(profile) {\r\n            // start this now as it has a 10s timeout\r\n            var locationPromise = AppService.getCurrentPosition()\r\n\r\n            var profilePromise = profile ? $q.when(profile) : AppService.loadProfile()\r\n\r\n            profilePromise.then(function(profile) {\r\n                if(!profile)\r\n                    return $q.reject('Unable to load Profile')\r\n\r\n                if(!profile.gps)\r\n                    return null\r\n\r\n                $scope.status = 'WAITING_FOR_GPS'\r\n                return locationPromise.then(\r\n                    function(result){return result},\r\n                    function(error) {\r\n                        // if profile.location != null then could have a toast warning that we were unable to update the location\r\n                        return null\r\n                    }\r\n                )\r\n            }).then(function(location) {\r\n                var profile = AppService.getProfile()\r\n\r\n                // if the user is using a location from the map, or couldn't get the GPS location then skip trying to save the location\r\n                if(profile.gps === false || location === null) {\r\n                    proceed(profile)\r\n                    return\r\n                }\r\n\r\n                $log.log('updating location to ' + JSON.stringify(location))\r\n                AppService.saveProfile({location:location})\r\n                    .always(() => proceed(profile))\r\n\r\n            }, function(error) {\r\n                resetStyles()\r\n                AppService.logout()\r\n                $log.error('Error loging in: ' + JSON.stringify(error))\r\n                if(error.code === 209) { // Invalid session token\r\n                    AppUtil.toastSimple('Invalid session. Try again')\r\n                    return\r\n                }\r\n                AppUtil.toastSimpleTranslate('LOGIN_ERROR')\r\n            })\r\n        }\r\n\r\n        /**\r\n         * After a successful login proceed to the next screen\r\n         * @param profile\r\n         */\r\n        function proceed() {\r\n            $scope.status = ''\r\n            $scope.logo.class = 'drop'\r\n            AppService.getMutualMatches() // load in the background\r\n            // disable the back button\r\n            $ionicHistory.nextViewOptions({\r\n                historyRoot: true,\r\n                disableBack: true\r\n            })\r\n\r\n            // the timeout is to give the drop CSS animation time\r\n            $timeout(() => AppService.goToNextLoginState(), 500)\r\n        }\r\n\r\n\r\n\r\n        var connectToFacebook = function () {\r\n            var deferred = $q.defer()\r\n            $scope.status = 'LOGGING_IN_TO_FB'\r\n            $cordovaFacebook.getLoginStatus()\r\n                .then(function(statusResult) {\r\n                    if (statusResult.status === 'connected') {\r\n                        $log.log('setting $rootScope.facebookConnected')\r\n                        $rootScope.facebookConnected = true\r\n                        $rootScope.fbAccessToken = statusResult.authResponse.accessToken\r\n                        deferred.resolve(statusResult)\r\n                    } else {\r\n                        // If the user isn't connected then login\r\n                        $log.log('$cordovaFacebook.login')\r\n                        $cordovaFacebook.login([\"public_profile\", \"email\", \"user_birthday\", \"user_photos\", \"user_friends\", \"user_likes\"])\r\n                            .then(function (loginResult) {\r\n                                if (loginResult.status === 'connected') {\r\n                                    $log.log('setting $rootScope.facebookConnected')\r\n                                    $rootScope.facebookConnected = true\r\n                                    $rootScope.fbAccessToken = loginResult.authResponse.accessToken\r\n                                    deferred.resolve(loginResult)\r\n                                } else {\r\n                                    deferred.reject(loginResult)\r\n                                }\r\n                            }, function (error) {\r\n                                return deferred.reject(error)\r\n                            })\r\n                    }\r\n                }, function(error) {\r\n                    deferred.reject(error)\r\n                })\r\n            return deferred.promise\r\n        }\r\n\r\n\r\n        // Waits for the facebook plugin to be ready\r\n        function ensureFb(callback) {\r\n            if ((window.cordova || fbLoaded) && platformReady) {\r\n                if(callback) {\r\n                    $timeout(callback, 50)\r\n                }\r\n            } else {\r\n                $timeout(function() {ensureFb(callback)}, 50)\r\n            }\r\n        }\r\n\r\n        var autoLogin = function() {\r\n            // TODO change the Parse.User.current() check to an AppService call\r\n            if(Parse.User.current() != null) {\r\n                $log.log('auto login')\r\n                setLoggingInStyles()\r\n                AppService.autoLogin()\r\n                if(Parse.FacebookUtils.isLinked(Parse.User.current())) {\r\n                    $log.log('Checking facebook user')\r\n                    connectToFacebook().then(function(result) {\r\n                        // TODO check the facebook id matches the cached Parse user, else force logout\r\n                        checkProfile()\r\n                    }, function(error) {\r\n                        resetStyles()\r\n                        AppUtil.toastSimple('Facebook login error')\r\n                        $log.error('Facebook login error ' + JSON.stringify(error))\r\n                    })\r\n                } else {\r\n                    checkProfile()\r\n                }\r\n            } else {\r\n                resetStyles()\r\n            }\r\n        }\r\n\r\n        // wait for the facebook plugin to initialise and then check for doing an auto-login\r\n        ensureFb(autoLogin)\r\n\r\n    })\r\n;","angular.module('controllers')\r\n\r\n    .controller('CardsCtrl', function($log, $scope, $state, $timeout, $translate, $mdToast, $ionicSideMenuDelegate, TDCardDelegate, AppService,  $ionicModal, $ionicLoading) {\r\n\r\n        var translations\r\n        $translate(['MATCHES_LOAD_ERROR']).then(function (translationsResult) {\r\n            translations = translationsResult\r\n        })\r\n\r\n        // when $scope.matches is null then we haven't done a search\r\n        // when $scope.matches is an empty array then there are no new matches\r\n        // TODO rename this to profiles as its IProfile and not IMatch objects\r\n        $scope.matches = null\r\n\r\n        var profile = $scope.profile = AppService.getProfile()\r\n        $scope.profilePhoto = profile.photoUrl\r\n\r\n\r\n        $scope.$on('$ionicView.beforeEnter', function() {\r\n            $scope.unreadChats = AppService.getUnreadChatsCount() > 0\r\n        })\r\n\r\n        $scope.$on('$ionicView.enter', function() {\r\n            if(profile.enabled) {\r\n                // Check for any previously loaded matches\r\n                $scope.matches = AppService.getPotentialMatches()\r\n                // If we haven't searched then search for more\r\n                if($scope.matches == null)\r\n                    updatePotentialMatches()\r\n            }\r\n        })\r\n\r\n        $scope.$on('newPotentialMatches', function() {\r\n            $log.log('newPotentialMatches')\r\n            $scope.$apply(function(){ $scope.matches = AppService.getPotentialMatches() })\r\n        })\r\n\r\n        $scope.$on('unreadChatsCountUpdated', function() {\r\n            $scope.unreadChats = AppService.getUnreadChatsCount() > 0\r\n        })\r\n\r\n        $scope.searchAgain = function() {\r\n            $scope.matches = null\r\n            updatePotentialMatches()\r\n        }\r\n\r\n\r\n        var MIN_SEARCH_TIME = 2000\r\n        function updatePotentialMatches() {\r\n\r\n            var startTime = Date.now()\r\n            AppService.updatePotentialMatches()\r\n                .then(function(result) {\r\n                    $log.log('CardsCtrl: found ' + result.length + ' potential matches')\r\n                    result.map(function(profile) {\r\n                        profile.image = profile.photoUrl\r\n                    })\r\n                    // Make the search screen show for at least a certain time so it doesn't flash quickly\r\n                    var elapsed = Date.now() - startTime\r\n                    if(elapsed < MIN_SEARCH_TIME)\r\n                        $timeout(function(){ $scope.matches = result }, MIN_SEARCH_TIME - elapsed)\r\n                    else\r\n                        $scope.$apply(function(){ $scope.matches = result })\r\n                }\r\n                ,function(error) {\r\n                    $log.log('updatePotentialMatches error ' + JSON.stringify(error))\r\n                    $scope.$apply(function(){ $scope.matches = [] })\r\n                    $mdToast.show($mdToast.simple().content(translations.MATCHES_LOAD_ERROR).hideDelay(2000))\r\n                }\r\n            )\r\n        }\r\n\r\n        // Initialise the new match modal\r\n        $ionicModal.fromTemplateUrl('newMatch.html', {\r\n            scope: $scope,\r\n            animation: 'slide-in-up'\r\n        }).then(function(modal) {\r\n            $scope.modal = modal\r\n        })\r\n        // Cleanup the modal when we're done with it!\r\n        $scope.$on('$destroy', function() {\r\n            $scope.modal.remove()\r\n        })\r\n\r\n        $scope.$on('newMatch', function (event, match) {\r\n            $log.log('CardsCtrl.newMatch ' + match.id)\r\n            $scope.newMatch = match\r\n            $scope.matchProfile = AppService.getProfileById(match.profileId)\r\n            $scope.modal.show()\r\n        })\r\n        $scope.closeNewMatch = function() {\r\n            $scope.modal.hide()\r\n        }\r\n        $scope.messageNewMatch = function() {\r\n            $scope.modal.hide()\r\n            $state.go('^.chat',{matchId : $scope.newMatch.id})\r\n        }\r\n        // a test function for viewing the new match modal screen\r\n        $scope.openNewMatch = function() {\r\n            $scope.newMatch = AppService.getMutualMatches()[0]\r\n            $scope.modal.show()\r\n        }\r\n\r\n        $scope.enableDiscovery = function() {\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n\t        $scope.matches = null\r\n            AppService.enableDiscovery().then(function(result){\r\n\t            $ionicLoading.hide()\r\n\t            $log.log('discovery enabled. updatin matches...')\r\n                updatePotentialMatches()\r\n            }, function(error){\r\n\t            $mdToast.show($mdToast.simple().content('Error setting discovery').hideDelay(2000))\r\n\t            $ionicLoading.hide()\r\n            })\r\n        }\r\n\r\n        $scope.viewDetails = function(card) {\r\n            $log.log('view details ' + JSON.stringify(card))\r\n            $scope.$parent.selectedCard = card\r\n            $state.go('^.card-info')\r\n        }\r\n\r\n        $scope.accept = function(idx) {\r\n            $log.log('accept button')\r\n            TDCardDelegate.popCard($scope, true)\r\n        }\r\n        $scope.reject = function(idx) {\r\n            $log.log('reject button')\r\n            TDCardDelegate.popCard($scope, true)\r\n        }\r\n\r\n        // matches are swiped off from the end of the $scope.matches array (i.e. popped)\r\n\r\n        $scope.cardDestroyed = function(index) {\r\n            $scope.matches.splice(index, 1)\r\n        }\r\n\r\n        $scope.cardTransitionLeft = function(match) {\r\n            AppService.processMatch(match, false)\r\n            if($scope.matches.length == 0) {\r\n                // TODO auto-load more?\r\n            }\r\n        }\r\n        $scope.cardTransitionRight = function(match) {\r\n            AppService.processMatch(match, true)\r\n            if($scope.matches.length == 0) {\r\n                // TODO auto-load more?\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    .controller('CardInfoCtrl', function($log, $scope, $cordovaFacebook, $ionicHistory, $ionicActionSheet, $ionicLoading, $mdToast, $translate, AppService) {\r\n\r\n        //$cordovaFacebook.api()\r\n        //{user-id}?fields=context.fields%28mutual_friends%29\r\n        var translations\r\n        $translate(['REQUEST_FAILED', 'REPORT', 'MATCH_OPTIONS', 'CANCEL']).then(function (translationsResult) {\r\n            translations = translationsResult\r\n        })\r\n\r\n        $scope.profile = AppService.getProfile()\r\n        var from = $scope.profile.location\r\n        var to = $scope.selectedCard.location\r\n\r\n        var distance = getDistanceFromLatLonInKm(from.latitude,from.longitude, to.latitude, to.longitude)\r\n\r\n        if($scope.profile.distanceType == 'mi')\r\n            distance *= 1.609344\r\n\r\n        distance = distance.toFixed(0)\r\n\r\n        $scope.distance = distance == 0 ? 1 : distance\r\n\r\n        $scope.like = function() {\r\n            var match = AppService.getPotentialMatches().pop()\r\n             AppService.processMatch(match, true)\r\n             $ionicHistory.goBack()\r\n        }\r\n\r\n        $scope.reject = function() {\r\n            var match = AppService.getPotentialMatches().pop()\r\n            AppService.processMatch(match, false)\r\n            $ionicHistory.goBack()\r\n        }\r\n\r\n\r\n        $scope.profileOptions = function() {\r\n            $ionicActionSheet.show({\r\n                destructiveText: translations.REPORT,\r\n                titleText: translations.MATCH_OPTIONS,\r\n                cancelText: translations.CANCEL,\r\n                cancel: function() {},\r\n                destructiveButtonClicked: function(index) {\r\n                    report()\r\n                    return true\r\n                }\r\n            })\r\n        }\r\n\r\n        function report() {\r\n            var profile = AppService.getPotentialMatches().pop()\r\n\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            AppService.reportProfile(profile).then(function(result){\r\n                $log.log('reported profile')\r\n                $ionicLoading.hide()\r\n\r\n                AppService.processMatch(profile, false)\r\n                $ionicHistory.goBack()\r\n\r\n            },function(error){\r\n                $ionicLoading.hide()\r\n                $mdToast.show($mdToast.simple().content(translations.REQUEST_FAILED).hideDelay(2000))\r\n                $log.log('error reporting profile ' + JSON.stringify(error))\r\n            })\r\n        }\r\n\r\n    })\r\n\r\n\r\n\r\n    .controller('MatchProfileCtrl', function($scope, $cordovaFacebook, $ionicHistory, AppService, matchProfile) {\r\n        //$cordovaFacebook.api()\r\n        //{user-id}?fields=context.fields%28mutual_friends%29\r\n\r\n        $scope.profile = AppService.getProfile()\r\n        $scope.matchProfile = matchProfile\r\n\r\n        var from = $scope.profile.location\r\n        var to = matchProfile.location\r\n\r\n        var distance = getDistanceFromLatLonInKm(from.latitude,from.longitude, to.latitude, to.longitude)\r\n\r\n        if($scope.profile.distanceType == 'mi')\r\n            distance *= 1.609344\r\n\r\n        distance = distance.toFixed(0)\r\n        $scope.distance = distance == 0 ? 1 : distance\r\n    })\r\n;\r\n\r\n// from http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points\r\nfunction getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\r\n    var R = 6371 // Radius of the earth in km\r\n    var dLat = deg2rad(lat2-lat1)\r\n    var dLon = deg2rad(lon2-lon1)\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\r\n    var d = R * c // Distance in km\r\n    return d\r\n}\r\n\r\nfunction deg2rad(deg) {\r\n    return deg * (Math.PI/180)\r\n}\r\n\r\n","angular.module('controllers')\r\n\r\n    .controller('EmailVerificationCtrl', function ($scope, AppService, AppUtil) {\r\n\r\n        // see https://parse.com/docs/js_guide#users-emailverification\r\n        // http://blog.parse.com/2012/04/03/introducing-app-email-settings/\r\n\r\n        $scope.isEmailVerified = () =>\r\n            AppUtil.blockingCall(\r\n                AppService.isEmailVerified(),\r\n                verified => verified ? AppService.goToNextLoginState() : AppUtil.toastSimpleTranslate('EMAIL_NOT_VERIFIED')\r\n            )\r\n\r\n        $scope.cancel = () => AppService.logout()\r\n    })\r\n\r\n\r\n    .controller('ProfileSetupCtrl', function ($scope, $state, $mdToast, AppService, AppUtil) {\r\n        // The user will be sent here from AppService.goToNextLoginState() if AppService.isProfileValid() returns false\r\n        $scope.$on('$ionicView.beforeEnter', function(event) {\r\n            var profile = AppService.getProfile()\r\n\r\n            var birthYear = null, birthMonth = null, birthDay = null\r\n            if(profile.birthdate) {\r\n                birthYear = profile.birthdate.getFullYear()\r\n                birthMonth = profile.birthdate.getMonth()\r\n                birthDay = profile.birthdate.getDay()\r\n            }\r\n\r\n            // pre-populate the values we already have on the profile\r\n            $scope.user = {name:profile.name, birthYear:birthYear, birthMonth:birthMonth, birthDay:birthDay, gender: profile.gender}\r\n        })\r\n\r\n\r\n        // Static data\r\n        $scope.months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\r\n        $scope.years = []\r\n        // provide the years for people aged 13 to 100\r\n        var yearsFrom = new Date().getFullYear()-100\r\n        var yearsTo = new Date().getFullYear()-13\r\n        for(var i=yearsFrom;i<=yearsTo;i++) {\r\n            $scope.years.push((i))\r\n        }\r\n        $scope.yearFrom = yearsFrom\r\n        $scope.yearTo = yearsTo\r\n\r\n        $scope.saveProfile = function() {\r\n\r\n            if(!$scope.user.name || $scope.user.name.trim().length < 1) {\r\n                AppUtil.toastSimpleTranslate('FIRST_NAME_REQUIRED')\r\n                return\r\n            }\r\n            if(!$scope.user.birthDay) {\r\n                AppUtil.toastSimpleTranslate('BIRTH_DAY_REQUIRED')\r\n                return\r\n            }\r\n            if(!$scope.user.birthMonth) {\r\n                AppUtil.toastSimpleTranslate('BIRTH_MONTH_REQUIRED')\r\n                return\r\n            }\r\n            if(!$scope.user.birthYear) {\r\n                AppUtil.toastSimpleTranslate('BIRTH_YEAR_REQUIRED')\r\n                return\r\n            }\r\n            if(!$scope.user.gender) {\r\n                AppUtil.toastSimpleTranslate('GENDER_REQUIRED')\r\n                return\r\n            }\r\n\r\n            var birthdate = new Date(Date.UTC($scope.user.birthYear, $scope.user.birthMonth, $scope.user.birthDay))\r\n            var changes = {name: $scope.user.name, birthdate: birthdate, gender: $scope.user.gender}\r\n\r\n            AppUtil.blockingCall(AppService.saveProfile(changes),\r\n                () => AppService.goToNextLoginState(),\r\n                'SETTINGS_SAVE_ERROR')\r\n        }\r\n\r\n        $scope.logout = () => AppService.logout()\r\n    })\r\n\r\n    .controller('LocationSetupCtrl', function($scope, $translate, AppService, AppUtil, $ionicPopup) {\r\n\r\n        var translations\r\n        $translate(['SETTINGS_SAVE_ERROR', 'GPS_ERROR', 'SET_MAP_LOCATION']).then(function (translationsResult) {\r\n            translations = translationsResult\r\n        })\r\n\r\n        // New York\r\n        var latLng = new google.maps.LatLng(40.73, -73.99)\r\n\r\n        var mapOptions = {\r\n            center: latLng,\r\n            zoom: 11,\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            mapTypeControl: false,\r\n            streetViewControl: false,\r\n            disableDoubleClickZoom: true\r\n        }\r\n\r\n        var map = new google.maps.Map(document.getElementById(\"map\"), mapOptions)\r\n        $scope.map = map\r\n        map.setCenter(latLng)\r\n\r\n        var marker = new google.maps.Marker({\r\n            position: latLng,\r\n            map: map,\r\n            title: \"My Location\",\r\n            draggable: true\r\n        })\r\n\r\n        google.maps.event.addListener(map, 'click', function(event) {\r\n            marker.setPosition(event.latLng)\r\n        })\r\n\r\n        $scope.setLocation = function() {\r\n            var pos = marker.getPosition()\r\n\r\n            AppUtil.blockingCall(\r\n                AppService.saveProfile({gps: false, location:{latitude:pos.lat(), longitude:pos.lng()}}),\r\n                () => AppService.goToNextLoginState(),\r\n                'SETTINGS_SAVE_ERROR'\r\n            )\r\n        }\r\n\r\n        $scope.cancel = () => AppService.logout()\r\n\r\n        $scope.$on('$ionicView.afterEnter', function(event) {\r\n            $ionicPopup.alert({\r\n                title: translations.GPS_ERROR,\r\n                template: translations.SET_MAP_LOCATION\r\n            })\r\n        })\r\n\r\n    })\r\n\r\n    .controller('TermsOfUseCtrl', function ($scope, AppService, AppUtil) {\r\n\r\n        // Required for Apple store submission when there is user generated content.\r\n        // See the Next Steps in the question at http://www.quora.com/Apple-App-Store-rejection-category-14-3-help-needed\r\n\r\n        $scope.agree = () =>\r\n            AppUtil.blockingCall(\r\n                AppService.termsOfUseAgreed(),\r\n                () => AppService.goToNextLoginState()\r\n            )\r\n\r\n        $scope.logout = () => AppService.logout()\r\n    })\r\n\r\n\r\n    .controller('ProfileCtrl', function($scope, $log, $rootScope, $state, $cordovaFacebook, $mdToast, AppService) {\r\n\r\n        $scope.$on('$ionicView.beforeEnter', function(event) {\r\n\r\n            $scope.profile = AppService.getProfile()\r\n            $scope.photos = $scope.profile.photos\r\n            $scope.age = new Date(new Date - new Date($scope.profile.birthdate)).getFullYear()-1970\r\n\r\n            if($rootScope.facebookConnected) {\r\n                // load the cached values first for quick update on the UI\r\n                var likes = localStorage.getItem('facebookLikes')\r\n                if(likes) {\r\n                    $scope.likes = JSON.parse(likes)\r\n                }\r\n                var friends = localStorage.getItem('facebookFriends')\r\n                if(friends) {\r\n                    $scope.friends = JSON.parse(friends)\r\n                }\r\n\r\n                // update asynchronously\r\n                // Only friends registered with your app will be returned\r\n                // See http://stackoverflow.com/questions/23417356/facebook-graph-api-v2-0-me-friends-returns-empty-or-only-friends-who-also-u\r\n                $cordovaFacebook.api('/me/friends').then(function(result){\r\n                    $scope.friends = result.data\r\n                    localStorage.setItem('facebookFriends', JSON.stringify(result.data))\r\n\r\n                    $cordovaFacebook.api('/me/likes').then(function(result){\r\n                        $scope.likes = result.data\r\n                        localStorage.setItem('facebookLikes', JSON.stringify(result.data))\r\n                    })\r\n                })\r\n            }\r\n        })\r\n\r\n        $scope.edit = function() {\r\n            $state.go('menu.profile-edit')\r\n        }\r\n    })\r\n\r\n    .controller('FbAlbumsCtrl', function($scope, $log, $cordovaFacebook) {\r\n        $scope.albums = null\r\n\r\n        // TODO use $iconicLoading instead of the text status\r\n        $cordovaFacebook.api('/me/albums').then(function(result) {\r\n            $scope.albums = result.data\r\n        }, function(error) {\r\n            $log.log('FbAlbumsController error ' + JSON.stringify(error))\r\n        })\r\n        // TODO handle if there are no albums\r\n    })\r\n\r\n    .controller('FbAlbumCtrl', function($log, $rootScope, $state, $scope, $stateParams, $ionicLoading, $cordovaFacebook) {\r\n\r\n        $cordovaFacebook.api('/'+ $stateParams.albumId +'/photos?fields=id,picture,source,height,width,images&limit=500')\r\n            .then(function(result) {\r\n                $scope.photos = result.data\r\n                // TODO handle if there are no photos\r\n            }, function(error) {\r\n                $log.log('FbAlbumController - error getting album photos ' + JSON.stringify(error))\r\n            })\r\n\r\n        $scope.selectPhoto = function (photo) {\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            getBase64FromImageUrl(photo.source)\r\n        }\r\n\r\n        function getBase64FromImageUrl(URL) {\r\n            var img = new Image()\r\n            img.crossOrigin=\"anonymous\"\r\n            img.src = URL\r\n            img.onload = function () {\r\n                var canvas = document.createElement(\"canvas\")\r\n                canvas.width =this.width\r\n                canvas.height =this.height\r\n\r\n                var ctx = canvas.getContext(\"2d\")\r\n                ctx.drawImage(this, 0, 0)\r\n\r\n                var dataURL = canvas.toDataURL(\"image/png\")\r\n\r\n                $rootScope.cropPhoto = dataURL\r\n                $ionicLoading.hide()\r\n                $state.go('^.crop')\r\n            }\r\n        }\r\n    })\r\n\r\n    .controller('PhotoCropCtrl', function($log, $scope, $rootScope, $ionicLoading, $state, $stateParams, $ionicHistory, AppService) {\r\n        $scope.myImage = $rootScope.cropPhoto\r\n        // $scope.myImage = $stateParams.imageData TODO try and use a state param instead of rootScoe\r\n\r\n        $scope.croppedImage = { data: ''}\r\n\r\n        $scope.$on('$ionicView.afterLeave', function(event) {\r\n            $rootScope.cropPhoto = null\r\n        })\r\n\r\n        $scope.cancel = function () {\r\n            $ionicHistory.goBack()\r\n        }\r\n\r\n        $scope.crop = function () {\r\n\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            try {\r\n                var dataURI = $scope.croppedImage.data\r\n                var base64\r\n                if (dataURI.split(',')[0].indexOf('base64') >= 0)\r\n                    base64 = dataURI.split(',')[1]\r\n                else\r\n                    base64 = unescape(dataURI.split(',')[1])\r\n\r\n                AppService.setPhoto(base64).then(function(result){\r\n                    $ionicLoading.hide()\r\n\r\n                    var viewHistory = $ionicHistory.viewHistory()\r\n\r\n                    if(viewHistory.backView.stateName == 'menu.fb-album') {\r\n                        // pop off the facebook album history items and set the back view to the profile edit page\r\n                        var history = viewHistory.histories[viewHistory.currentView.historyId]\r\n                        history.stack.splice(2, 3)\r\n                        history.cursor = 1\r\n                        viewHistory.backView = history.stack[1]\r\n                        $ionicHistory.goBack()\r\n                    }\r\n                    else {\r\n                        // if we came from a camers/gallery photo selection then can just go back\r\n                        $ionicHistory.goBack()\r\n                    }\r\n                },function(error){\r\n                    $ionicLoading.hide()\r\n                    $log.log('error saving cropped image ' + JSON.error(error))\r\n                })\r\n            } catch (e) {\r\n                // TODO show error\r\n                $ionicLoading.hide()\r\n            }\r\n        }\r\n    })\r\n\r\n    .controller('DiscoveryCtrl', function($scope, $state, $mdToast, $ionicLoading, $ionicHistory, AppService, AppUtil) {\r\n\r\n        $scope.$on('$ionicView.enter', function() {\r\n            $scope.profile = AppService.getProfile().clone()\r\n        })\r\n\r\n        $scope.save = () => AppUtil.blockingCall(\r\n            AppService.saveProfile($scope.profile),\r\n            () => {\r\n                AppService.clearPotentialMatches()\r\n                $state.go('menu.home')\r\n            }, 'SETTINGS_SAVE_ERROR'\r\n        )\r\n\r\n        $scope.cancel = function() {\r\n            $scope.profile = AppService.getProfile($scope).clone()\r\n        }\r\n    })\r\n\r\n    .controller('SettingsCtrl', function($log, $scope, $rootScope, $state, $translate, $mdToast, AppService, $ionicLoading, $ionicActionSheet, $cordovaFacebook) {\r\n\r\n        var translations\r\n        $translate(['SETTINGS_SAVE_ERROR','DELETE', 'DELETE_ACCOUNT','CANCEL']).then(function (translationsResult) {\r\n            translations = translationsResult\r\n        })\r\n\r\n        $scope.profile = AppService.getProfile().clone()\r\n\r\n        $scope.save = function() {\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            AppService.saveSettings($scope.profile).then(function(result) {\r\n                $scope.profile = AppService.getProfile().clone()\r\n            }, function(error) {\r\n                $log.log(\"save settings error \" + JSON.stringify(error))\r\n                $mdToast.show($mdToast.simple().content(translations.SETTINGS_SAVE_ERROR).hideDelay(2000))\r\n            }).always(function() { $ionicLoading.hide()})\r\n\r\n        }\r\n\r\n        $scope.cancel = function() {\r\n            $scope.profile = AppService.getProfile($scope).clone()\r\n        }\r\n\r\n\r\n        $scope.logout = function() {\r\n            AppService.logout()\r\n        }\r\n\r\n\r\n        $scope.deleteUnmatchedSwipes = function() {\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            AppService.deleteUnmatched().then(function(result){\r\n                $ionicLoading.hide()\r\n            },function(error){\r\n                $ionicLoading.hide()\r\n                $log.log('error deleting unmatched swipes ' + JSON.stringify(error))\r\n                $mdToast.show($mdToast.simple().content('An error occured ' + JSON.stringify(error)).hideDelay(3000))\r\n            })\r\n        }\r\n\r\n        $scope.deleteAccount = function() {\r\n            $ionicActionSheet.show({\r\n                destructiveText: translations.DELETE,\r\n                titleText: translations.DELETE_ACCOUNT,\r\n                cancelText: translations.CANCEL,\r\n                cancel: function() {},\r\n                destructiveButtonClicked: function(index) {\r\n                    doDelete();\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n\r\n        function doDelete() {\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            AppService.deleteAccount().then(function(result){\r\n                $ionicLoading.hide()\r\n                $scope.logout()\r\n            },function(error){\r\n                $ionicLoading.hide()\r\n                $log.log('error deleting account ' + JSON.stringify(error))\r\n                // TODO alert user\r\n            })\r\n        }\r\n\r\n    })\r\n\r\n    .controller('ContactCtrl', function($scope, AppService, $ionicLoading, $mdToast) {\r\n\r\n        $scope.contact = {message: ''}\r\n\r\n        $scope.sendMessage = function() {\r\n            if($scope.contact.message.length < 10) {\r\n                $mdToast.show($mdToast.simple().content('Write at least a few words!').hideDelay(2000))\r\n                return\r\n            }\r\n\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            AppService.sendContactMessage($scope.contact.message).then(function(success) {\r\n                $scope.contact.message = ''\r\n                $mdToast.show($mdToast.simple().content('Message sent').hideDelay(3000))\r\n            }, function(error) {\r\n                $mdToast.show($mdToast.simple().content('An error occurred').hideDelay(3000))\r\n            }).always(function() {\r\n                $ionicLoading.hide()\r\n            })\r\n        }\r\n    })\r\n\r\n    .controller('LocationCtrl', function($scope, $translate, AppService, $ionicLoading, AppUtil) {\r\n\r\n        // TODO load the google map script async here when required instead of index.html\r\n        var translations\r\n        $translate(['SETTINGS_SAVE_ERROR','GPS_ERROR']).then(function (translationsResult) {\r\n            translations = translationsResult\r\n        })\r\n\r\n        var profile = AppService.getProfile()\r\n        var location = profile.location\r\n\r\n        $scope.location = {useGPS: profile.gps}\r\n\r\n        var myLatlng = new google.maps.LatLng(location.latitude, location.longitude)\r\n\r\n        var mapOptions = {\r\n            center: myLatlng,\r\n            zoom: 11,\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            mapTypeControl: false,\r\n            streetViewControl: false,\r\n            disableDoubleClickZoom: true\r\n        }\r\n\r\n        var map = new google.maps.Map(document.getElementById(\"map\"), mapOptions)\r\n        $scope.map = map\r\n        map.setCenter(myLatlng)\r\n\r\n        var marker = new google.maps.Marker({\r\n            position: myLatlng,\r\n            map: map,\r\n            title: \"My Location\",\r\n            draggable: !profile.gps\r\n        })\r\n\r\n        google.maps.event.addListener(map, 'click', function(event) {\r\n            if(!$scope.location.useGPS)\r\n                marker.setPosition(event.latLng)\r\n        })\r\n\r\n        $scope.useGPSchanged = function() {\r\n            marker.setDraggable(!$scope.location.useGPS)\r\n\r\n            if($scope.location.useGPS) {\r\n                $ionicLoading.show({ templateUrl: 'loading.html' })\r\n                AppService.getCurrentPosition().then(function(gpsLocation) {\r\n                    return AppService.saveProfile({gps: true, location: gpsLocation})\r\n                }).then(\r\n                    function(profile) {\r\n                        marker.setPosition(new google.maps.LatLng(profile.location.latitude, profile.location.longitude))\r\n                        $ionicLoading.hide()\r\n                    }, error => {\r\n                        $ionicLoading.hide()\r\n                        if(error === 'GPS_ERROR')\r\n                            AppUtil.toastSimple(translations.GPS_ERROR)\r\n                        else\r\n                            AppUtil.toastSimple(translations.SETTINGS_SAVE_ERROR)\r\n                        $scope.location.useGPS = false\r\n                        marker.setDraggable(true)\r\n                    }\r\n                )\r\n            }\r\n            // else the user needs to click the save button\r\n        }\r\n\r\n        $scope.setLocation = function() {\r\n            var pos = marker.getPosition()\r\n            $ionicLoading.show({ templateUrl: 'loading.html' })\r\n            AppService.saveProfile({gps: false, location:{latitude:pos.lat(), longitude:pos.lng()}})\r\n                    .then(function() { // send back to main page?\r\n                    }, error => AppUtil.toastSimple(translations.SETTINGS_SAVE_ERROR)\r\n                ).always(function() {\r\n                    $ionicLoading.hide()\r\n                })\r\n        }\r\n\r\n    })\r\n;\r\n","angular.module('controllers')\n\n\t.controller('ChatsCtrl', function ($scope, $log, AppService) {\n\n\t\t$scope.$on('$ionicView.beforeEnter', function () {\n\t\t\t$scope.matches = AppService.getMutualMatches()\n\t\t\tAppService.resetBadge()\n\t\t})\n\n\t\t$scope.$on('matchRemoved', function (event, matchId) {\n\t\t\t$log.log('on ChatsCtrl removeMatch')\n\t\t\t$scope.$apply()\n\t\t})\n\t})\n\n\t.controller('ChatCtrl', function ($scope, $log, $timeout, $interval, $translate, $ionicScrollDelegate, $state, $stateParams, $ionicHistory, $ionicNavBarDelegate, $ionicActionSheet, $ionicPopup, $ionicLoading, $mdToast, AppService, AppUtil) {\n\n\t\t// Modified from http://forum.ionicframework.com/t/ionic-elastichat-chat-demo-w-auto-resizing-textarea/13562\n\n\t\tvar translations\n\t\t$translate(['UNMATCHED', 'REMOVE_MATCH', 'REPORT', 'MATCH_OPTIONS', 'CANCEL', 'REMOVE_MATCH_ERROR', 'MATCH_REPORTED', 'WANT_TO_REMOVE_MATCH', 'REMOVE', 'MESSAGE_NOT_SENT', 'REQUEST_FAILED']).then(function (translationsResult) {\n\t\t\ttranslations = translationsResult\n\t\t})\n\n\t\t$scope.sending = false\n\t\t$scope.profile = AppService.getProfile()\n\n\t\tvar messageCheckTimer\n\n\t\tvar viewScroll = $ionicScrollDelegate.$getByHandle('userMessageScroll')\n\t\tvar footerBar // gets set in $ionicView.enter\n\t\tvar scroller\n\t\tvar txtInput // ^^^\n\n\t\t// A chat could have a number of messages while could take sometime to load from the database and create the DOM.\n\t\t// Instead of resolving in the router we will do the main work here so the initial UI tap is responsive and\n\t\t// display the messages when its all ready\n\t\t$scope.$on('$ionicView.enter', function () {\n\t\t\tif(window.cordova) {\n\t\t\t\tcordova.plugins.Keyboard.disableScroll(true)\n\t\t\t\twindow.addEventListener('native.keyboardshow', keyboardShowHandler)\n\t\t\t\twindow.addEventListener('native.keyboardhide', keyboardHideHandler)\n\t\t\t}\n\n\t\t\t//$log.log('UserMessages $ionicView.enter')\n\t\t\t$ionicLoading.show({templateUrl: 'loading.html', noBackdrop: true})\n\t\t\tAppService.getActiveChat($stateParams.matchId)\n\t\t\t\t.then((result) => {\n\t\t\t\t\t$scope.messages = result\n\t\t\t\t\treturn AppService.getProfileByMatchId($stateParams.matchId)\n\t\t\t\t})\n\t\t\t\t.then((result) => $scope.matchProfile = result)\n\t\t\t\t.then(() => {\n\t\t\t\t\t$scope.doneLoading = true\n\t\t\t\t\t$scope.input = {\n\t\t\t\t\t\t// load what the user has previously typed, if anything\n\t\t\t\t\t\tmessage: localStorage['userMessage-' + $scope.matchProfile.id] || ''\n\t\t\t\t\t}\n\t\t\t\t\tviewScroll.scrollBottom()\n\t\t\t\t\t$ionicLoading.hide()\n\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tfooterBar = document.body.querySelector('#userMessagesView .bar-footer')\n\t\t\t\t\t\tscroller = document.body.querySelector('#userMessagesView .scroll-content')\n\t\t\t\t\t\ttxtInput = angular.element(footerBar.querySelector('textarea'))\n\t\t\t\t\t}, 0)\n\n\t\t\t\t\tmessageCheckTimer = $interval(function () {\n\t\t\t\t\t\t// here you could check for new messages if your app doesn't use push notifications or user disabled them\n\t\t\t\t\t}, 20000)\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\t$scope.messages = []\n\t\t\t\t\t$ionicLoading.hide()\n\t\t\t\t\t$log.log('error loading chat ' + JSON.stringify(error))\n\t\t\t\t\tAppUtil.toastSimpleTranslate('REQUEST_FAILED')\n\t\t\t\t})\n\t\t})\n\n\n\t\t$scope.$on('$ionicView.afterEnter', function () {\n\t\t\tAppService.setChatRead($stateParams.matchId, true)\n\n\t\t\t// this is just used by the report() function at the moment\n\t\t\t$scope.match = AppService.getMatch($stateParams.matchId)\n\t\t})\n\n\n\t\t// Save what the user has typed when they leave the view\n\t\t$scope.$on('$ionicView.beforeLeave', function () {\n\t\t\tif (!$scope.input.message || $scope.input.message.trim().length == 0)\n\t\t\t\tlocalStorage.removeItem('userMessage-' + $scope.matchProfile.id)\n\t\t\telse\n\t\t\t\tlocalStorage['userMessage-' + $scope.matchProfile.id] = $scope.input.message\n\t\t})\n\n\t\t$scope.$on('$ionicView.leave', function () {\n\t\t\tif(window.cordova) {\n\t\t\t\twindow.removeEventListener('native.keyboardshow', keyboardShowHandler)\n\t\t\t\twindow.removeEventListener('native.keyboardhide', keyboardHideHandler)\n\t\t\t\tcordova.plugins.Keyboard.disableScroll(false)\n\t\t\t}\n\n\t\t\t//$log.log('leaving UserMessages view, destroying interval')\n\t\t\t// Make sure that the interval is destroyed\n\t\t\tif (angular.isDefined(messageCheckTimer)) {\n\t\t\t\t$interval.cancel(messageCheckTimer)\n\t\t\t\tmessageCheckTimer = undefined\n\t\t\t}\n\t\t})\n\n\n\t\t$scope.$on('newMessage', function (event, message) {\n\t\t\tif (message.match.id == $stateParams.matchId) {\n\t\t\t\t$ionicScrollDelegate.scrollBottom(true)\n\t\t\t\t// re-set the read flag if we are viewing this chat\n\t\t\t\tAppService.setChatRead(message.match.id, true)\n\t\t\t}\n\t\t})\n\n\t\t$scope.$on('matchRemoved', function (event, matchId) {\n\t\t\t$log.log('on ChatCtrl matchRemoved')\n\t\t\tif (matchId == $stateParams.matchId) {\n\t\t\t\t$mdToast.show($mdToast.simple().content(translations.UNMATCHED).hideDelay(2000))\n\t\t\t\t$ionicHistory.goBack()\n\t\t\t}\n\t\t})\n\n\t\t$scope.chatOptions = function () {\n\t\t\t$ionicActionSheet.show({\n\t\t\t\tbuttons: [\n\t\t\t\t\t{text: translations.REPORT}\n\t\t\t\t],\n\t\t\t\tdestructiveText: translations.REMOVE_MATCH,\n\t\t\t\ttitleText: translations.MATCH_OPTIONS,\n\t\t\t\tcancelText: translations.CANCEL,\n\t\t\t\tcancel: function () {\n\t\t\t\t},\n\t\t\t\tdestructiveButtonClicked: function (index) {\n\t\t\t\t\tunmatch()\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t\tbuttonClicked: function (index) {\n\t\t\t\t\treport()\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tfunction report() {\n\t\t\t$ionicLoading.show({templateUrl: 'loading.html'})\n\t\t\tAppService.reportProfile($scope.matchProfile, $scope.match).then(function (result) {\n\t\t\t\t$log.log('reported match')\n\t\t\t\t$ionicLoading.hide()\n\n\t\t\t\tvar confirmPopup = $ionicPopup.confirm({\n\t\t\t\t\ttitle: translations.MATCH_REPORTED,\n\t\t\t\t\ttemplate: translations.WANT_TO_REMOVE_MATCH,\n\t\t\t\t\tokText: translations.REMOVE,\n\t\t\t\t\tcancelText: translations.CANCEL\n\t\t\t\t})\n\t\t\t\tconfirmPopup.then(function (res) {\n\t\t\t\t\tif (res)\n\t\t\t\t\t\tunmatch()\n\t\t\t\t})\n\t\t\t}, function (error) {\n\t\t\t\t$ionicLoading.hide()\n\t\t\t\t$mdToast.show($mdToast.simple().content(translations.REQUEST_FAILED).hideDelay(2000))\n\t\t\t\t$log.log('error reporting match ' + JSON.stringify(error))\n\t\t\t})\n\t\t}\n\n\t\tfunction unmatch() {\n\t\t\t$ionicLoading.show({templateUrl: 'loading.html'})\n\t\t\tAppService.removeMatch($stateParams.matchId).then(function (result) {\n\t\t\t\t$log.log('removed match ok')\n\t\t\t\t$ionicLoading.hide()\n\t\t\t\t$ionicHistory.goBack()\n\t\t\t\t// TODO remove this chat, or everything, from the history\n\t\t\t}, function (error) {\n\t\t\t\t$ionicLoading.hide()\n\t\t\t\t$mdToast.show($mdToast.simple().content(translations.REMOVE_MATCH_ERROR).hideDelay(2000))\n\t\t\t\t$log.log('error removing match ' + JSON.stringify(error))\n\t\t\t})\n\t\t}\n\n\n\t\t$scope.sendMessage = function (sendMessageForm) {\n\t\t\tif (!$scope.input.message.trim().length) return\n\t\t\t// If you do a web service call this will be needed as well as before the viewScroll calls\n\t\t\t// you can't see the effect of this in the browser it needs to be used on a real device\n\t\t\t// for some reason the one time blur event is not firing in the browser but does on devices\n\t\t\tkeepKeyboardOpen()\n\n\t\t\tvar msg = $scope.input.message\n\t\t\t$scope.input.message = ''\n\n\t\t\t// TODO have a collection of sending messages, then if a send fails the user can hold the message to resend\n\t\t\t// For now clear the message text to avoid sending duplicate message when send is clicked again\n\t\t\tAppService.sendChatMessage($stateParams.matchId, msg).then(function (sentMessage) {\n\t\t\t\t$timeout(function () {\n\t\t\t\t\tkeepKeyboardOpen()\n\t\t\t\t\tviewScroll.scrollBottom(true)\n\t\t\t\t}, 0)\n\t\t\t}, function (error) {\n\t\t\t\t$log.error('error sending message ' + JSON.stringify(error))\n\t\t\t\t// If the user hasn't type anything and the message failed, then restore the message\n\t\t\t\tif(!$scope.input.message)\n\t\t\t\t\t$scope.input.message = msg\n\t\t\t\tAppUtil.toastSimple(translations.MESSAGE_NOT_SENT)\n\t\t\t})\n\t\t}\n\n\t\t// this keeps the keyboard open on a device only after sending a message, it is non obtrusive\n\t\tfunction keepKeyboardOpen() {\n\t\t\t//$log.log('keepKeyboardOpen')\n\t\t\ttxtInput.one('blur', function () {\n\t\t\t\t//$log.log('textarea blur, focus back on it')\n\t\t\t\ttxtInput[0].focus()\n\t\t\t})\n\t\t}\n\n\t\t$scope.onMessageHold = function (e, itemIndex, message) {\n\t\t\treturn // disable for now\n\t\t\t$log.log('onMessageHold')\n\t\t\t$log.log('message: ' + JSON.stringify(message, null, 2))\n\t\t\t$ionicActionSheet.show({\n\t\t\t\tbuttons: [{\n\t\t\t\t\ttext: 'Copy Text'\n\t\t\t\t}, {\n\t\t\t\t\ttext: 'Delete Message'\n\t\t\t\t}],\n\t\t\t\tbuttonClicked: function (index) {\n\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\tcase 0: // Copy Text\n\t\t\t\t\t\t\t//cordova.plugins.clipboard.copy(message.text)\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 1: // Delete\n\t\t\t\t\t\t\t// no server side secrets here :~)\n\t\t\t\t\t\t\t$scope.messages.splice(itemIndex, 1)\n\t\t\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\t\t\tviewScroll.resize()\n\t\t\t\t\t\t\t}, 0)\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\t// keyboardHeight and the handlers are required to set the right height on iOS\n\t\tvar keyboardHeight = 0\n\n\t\tfunction keyboardShowHandler(e) {\n\t\t\tkeyboardHeight = e.keyboardHeight\n\t\t}\n\n\t\tfunction keyboardHideHandler(e) {\n\t\t\tkeyboardHeight = 0\n\t\t\t$timeout(function() {\n\t\t\t\tscroller.style.bottom = footerBar.clientHeight + 'px';\n\t\t\t}, 0)\n\t\t}\n\n\t\t// Need to resize on entering the view\n\t\t$scope.$on('elastic:resize', function (e, ta) {\n\t\t\tif (!ta) return\n\n\t\t\tvar taHeight = ta[0].offsetHeight\n\n\t\t\tif (!footerBar) return\n\n\t\t\tvar newFooterHeight = taHeight + 10\n\t\t\tnewFooterHeight = (newFooterHeight > 44) ? newFooterHeight : 44\n\n\t\t\tfooterBar.style.height = newFooterHeight + 'px'\n\n\t\t\tif (device.platform.toLowerCase() === 'ios') {\n\t\t\t\tscroller.style.bottom = newFooterHeight + keyboardHeight + 'px';\n\t\t\t} else {\n\t\t\t\tscroller.style.bottom = newFooterHeight + 'px';\n\t\t\t}\n\t\t})\n\n\n\t\tfunction onProfilePicError(ele) {\n\t\t\tthis.ele.src = '' // set a fallback\n\t\t}\n\n\t}\n);","angular.module(\"constants\", [])\n  .constant(\"appName\", \"Cloneder\")\n  .constant(\"playStoreUrl\", \"\")\n  .constant(\"itunesUrl\", \"\")\n  .constant(\"socialShareMessage\", \"\")\n  .constant(\"buildEnv\", \"prod\")\n  .constant(\"facebookAppId\", \"340785822781848\")\n  .constant(\"facebookAppName\", \"Cloneder\")\n  .constant(\"parseAppId\", \"Babyp1lRHGq1zovIdbZfLHqeNjJBoIgsuOBQjbii\")\n  .constant(\"parseJavascriptKey\", \"w8o2wLjk5IqmDNKl4GWyKchmXTvRZmhy8JGvMY6q\")\n  .constant(\"parseSubDomain\", \"cloneder\")\n  .constant(\"parseClientKey\", \"WXrSgMfilSytvgk5gu4m6c8pbGgL5BsUDwlPblGo\")\n  .constant(\"linkedInId\", \"75zt0sfhmxae7g\")\n  .constant(\"linkedInSecret\", \"pA1hcchX4XgIvMBV\")\n;\nvar FACEBOOK_APP_ID = \"340785822781848\";\n"],"sourceRoot":"/source/"}